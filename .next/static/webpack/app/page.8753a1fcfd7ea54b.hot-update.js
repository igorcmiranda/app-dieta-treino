"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/hooks.ts":
/*!**************************!*\
  !*** ./src/lib/hooks.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useBodyAnalyses: () => (/* binding */ useBodyAnalyses),\n/* harmony export */   useCurrentUser: () => (/* binding */ useCurrentUser),\n/* harmony export */   useDietPlans: () => (/* binding */ useDietPlans),\n/* harmony export */   useLocalStorage: () => (/* binding */ useLocalStorage),\n/* harmony export */   useUsers: () => (/* binding */ useUsers),\n/* harmony export */   useWorkoutPlans: () => (/* binding */ useWorkoutPlans),\n/* harmony export */   useWorkoutProgress: () => (/* binding */ useWorkoutProgress)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useLocalStorage,useUsers,useDietPlans,useWorkoutPlans,useWorkoutProgress,useBodyAnalyses,useCurrentUser auto */ \n// Dados demo para inicialização\nconst initializeDemoUsers = ()=>{\n    return [\n        {\n            id: 'admin-1',\n            name: 'Administrador',\n            email: 'admin@fitai.com',\n            password: 'admin123',\n            isAdmin: true,\n            emailVerified: true,\n            createdAt: new Date()\n        },\n        {\n            id: 'user-1',\n            name: 'João Silva',\n            email: 'user@fitai.com',\n            password: 'user123',\n            isAdmin: false,\n            emailVerified: true,\n            profile: {\n                age: 32,\n                gender: 'masculino',\n                height: 180,\n                weight: 75,\n                activityLevel: 'moderado',\n                goal: 'manter-peso-perder-gordura',\n                preferredMuscleGroups: [\n                    'peito',\n                    'braços',\n                    'abdômen',\n                    'pernas'\n                ],\n                foodRestrictions: [\n                    'lactose',\n                    'glúten'\n                ],\n                foodPreferences: [\n                    'frango',\n                    'arroz integral',\n                    'brócolis',\n                    'banana'\n                ]\n            },\n            subscription: {\n                plan: 'premium',\n                status: 'active',\n                startDate: new Date('2025-09-01'),\n                endDate: new Date('2025-12-01'),\n                canDowngrade: true,\n                downgradableDate: new Date('2025-10-01'),\n                dietsUsedThisMonth: 0,\n                workoutsUsedThisMonth: 0\n            },\n            createdAt: new Date()\n        },\n        {\n            id: 'user-2',\n            name: 'Maria Santos',\n            email: 'maria@fitai.com',\n            password: 'maria123',\n            isAdmin: false,\n            emailVerified: true,\n            profile: {\n                age: 28,\n                gender: 'feminino',\n                height: 165,\n                weight: 60,\n                activityLevel: 'moderado',\n                goal: 'manter-peso-perder-gordura',\n                preferredMuscleGroups: [\n                    'pernas',\n                    'glúteos'\n                ],\n                foodRestrictions: [\n                    'carne vermelha'\n                ],\n                foodPreferences: [\n                    'salmão',\n                    'quinoa',\n                    'abacate',\n                    'iogurte'\n                ]\n            },\n            createdAt: new Date()\n        }\n    ];\n};\n// Simulação de banco de dados local (localStorage)\nfunction useLocalStorage(key, initialValue) {\n    const [storedValue, setStoredValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialValue);\n    const [isInitialized, setIsInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useLocalStorage.useEffect\": ()=>{\n            try {\n                if (true) {\n                    const item = window.localStorage.getItem(key);\n                    if (item) {\n                        const parsedValue = JSON.parse(item);\n                        setStoredValue(parsedValue);\n                    } else if (key === 'fitness-app-users') {\n                        // Inicializar dados demo se não existirem usuários\n                        const demoUsers = initializeDemoUsers();\n                        window.localStorage.setItem(key, JSON.stringify(demoUsers));\n                        setStoredValue(demoUsers);\n                    }\n                }\n            } catch (error) {\n                console.error('Error reading localStorage key \"'.concat(key, '\":'), error);\n                if (key === 'fitness-app-users') {\n                    // Fallback para dados demo em caso de erro\n                    const demoUsers = initializeDemoUsers();\n                    setStoredValue(demoUsers);\n                }\n            } finally{\n                setIsInitialized(true);\n            }\n        }\n    }[\"useLocalStorage.useEffect\"], [\n        key\n    ]);\n    const setValue = (value)=>{\n        try {\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\n            setStoredValue(valueToStore);\n            if (true) {\n                window.localStorage.setItem(key, JSON.stringify(valueToStore));\n            }\n        } catch (error) {\n            console.error('Error setting localStorage key \"'.concat(key, '\":'), error);\n        }\n    };\n    return [\n        storedValue,\n        setValue,\n        isInitialized\n    ];\n}\n// Hook para gerenciar usuários\nfunction useUsers() {\n    const [users, setUsers, isInitialized] = useLocalStorage('fitness-app-users', []);\n    const addUser = (userData)=>{\n        const newUser = {\n            ...userData,\n            id: Date.now().toString(),\n            createdAt: new Date()\n        };\n        setUsers((prev)=>[\n                ...prev,\n                newUser\n            ]);\n        return newUser;\n    };\n    const updateUser = (id, updates)=>{\n        setUsers((prev)=>prev.map((user)=>user.id === id ? {\n                    ...user,\n                    ...updates\n                } : user));\n    };\n    const deleteUser = (id)=>{\n        setUsers((prev)=>prev.filter((user)=>user.id !== id));\n    };\n    const getUserById = (id)=>{\n        return users.find((user)=>user.id === id);\n    };\n    const authenticateUser = (email, password)=>{\n        console.log('Tentando autenticar:', email, password);\n        console.log('Usuários disponíveis:', users);\n        const user = users.find((user)=>user.email === email && user.password === password);\n        console.log('Usuário encontrado:', user);\n        return user;\n    };\n    return {\n        users,\n        addUser,\n        updateUser,\n        deleteUser,\n        getUserById,\n        authenticateUser,\n        isInitialized\n    };\n}\n// Hook para gerenciar planos de dieta\nfunction useDietPlans() {\n    const [dietPlans, setDietPlans] = useLocalStorage('fitness-app-diet-plans', []);\n    const addDietPlan = (plan)=>{\n        const newPlan = {\n            ...plan,\n            createdAt: new Date()\n        };\n        setDietPlans((prev)=>[\n                ...prev.filter((p)=>p.userId !== plan.userId),\n                newPlan\n            ]);\n        return newPlan;\n    };\n    const getDietPlanByUserId = (userId)=>{\n        return dietPlans.find((plan)=>plan.userId === userId);\n    };\n    return {\n        dietPlans,\n        addDietPlan,\n        getDietPlanByUserId\n    };\n}\n// Hook para gerenciar planos de treino\nfunction useWorkoutPlans() {\n    const [workoutPlans, setWorkoutPlans] = useLocalStorage('fitness-app-workout-plans', []);\n    const addWorkoutPlan = (plan)=>{\n        const newPlan = {\n            ...plan,\n            createdAt: new Date()\n        };\n        setWorkoutPlans((prev)=>[\n                ...prev.filter((p)=>p.userId !== plan.userId),\n                newPlan\n            ]);\n        return newPlan;\n    };\n    const getWorkoutPlanByUserId = (userId)=>{\n        return workoutPlans.find((plan)=>plan.userId === userId);\n    };\n    return {\n        workoutPlans,\n        addWorkoutPlan,\n        getWorkoutPlanByUserId\n    };\n}\n// Hook para gerenciar progresso de treino\nfunction useWorkoutProgress() {\n    const [workoutProgress, setWorkoutProgress] = useLocalStorage('fitness-app-workout-progress', []);\n    const addWorkoutProgress = (progress)=>{\n        const newProgress = {\n            ...progress,\n            createdAt: new Date()\n        };\n        setWorkoutProgress((prev)=>[\n                ...prev,\n                newProgress\n            ]);\n        return newProgress;\n    };\n    const getWorkoutProgressByUserId = (userId)=>{\n        return workoutProgress.filter((progress)=>progress.userId === userId);\n    };\n    const getWorkoutProgressByDate = (userId, date)=>{\n        return workoutProgress.find((progress)=>progress.userId === userId && progress.date === date);\n    };\n    const updateWorkoutProgress = (userId, date, workoutDay, updates)=>{\n        setWorkoutProgress((prev)=>prev.map((progress)=>progress.userId === userId && progress.date === date && progress.workoutDay === workoutDay ? {\n                    ...progress,\n                    ...updates\n                } : progress));\n    };\n    return {\n        workoutProgress,\n        addWorkoutProgress,\n        getWorkoutProgressByUserId,\n        getWorkoutProgressByDate,\n        updateWorkoutProgress\n    };\n}\n// Hook para gerenciar análises corporais\nfunction useBodyAnalyses() {\n    const [bodyAnalyses, setBodyAnalyses] = useLocalStorage('fitness-app-body-analyses', []);\n    const addBodyAnalysis = (analysis)=>{\n        const newAnalysis = {\n            ...analysis,\n            createdAt: new Date()\n        };\n        setBodyAnalyses((prev)=>[\n                ...prev.filter((a)=>a.userId !== analysis.userId),\n                newAnalysis\n            ]);\n        return newAnalysis;\n    };\n    const getBodyAnalysisByUserId = (userId)=>{\n        return bodyAnalyses.find((analysis)=>analysis.userId === userId);\n    };\n    return {\n        bodyAnalyses,\n        addBodyAnalysis,\n        getBodyAnalysisByUserId\n    };\n}\n// Hook para sessão atual\nfunction useCurrentUser() {\n    const [currentUser, setCurrentUser] = useLocalStorage('fitness-app-current-user', null);\n    const login = (user)=>{\n        console.log('Fazendo login do usuário:', user);\n        setCurrentUser(user);\n    };\n    const logout = ()=>{\n        setCurrentUser(null);\n    };\n    const updateCurrentUser = (updates)=>{\n        if (currentUser) {\n            const updatedUser = {\n                ...currentUser,\n                ...updates\n            };\n            setCurrentUser(updatedUser);\n        }\n    };\n    return {\n        currentUser,\n        login,\n        logout,\n        updateCurrentUser,\n        isLoggedIn: !!currentUser,\n        isAdmin: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.isAdmin) || false\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/hooks.ts\n"));

/***/ })

});