{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/lib/hooks.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { User, UserProfile, FoodEntry, DietPlan, WorkoutPlan, BodyAnalysis, WorkoutProgress } from '@/lib/types';\n\n// Dados demo para inicialização\nconst initializeDemoUsers = (): User[] => {\n  return [\n    {\n      id: 'admin-1',\n      name: 'Administrador',\n      email: 'admin@fitai.com',\n      password: 'admin123',\n      isAdmin: true,\n      createdAt: new Date()\n    },\n    {\n      id: 'user-1',\n      name: 'João Silva',\n      email: 'user@fitai.com',\n      password: 'user123',\n      isAdmin: false,\n      createdAt: new Date()\n    },\n    {\n      id: 'user-2',\n      name: 'Maria Santos',\n      email: 'maria@fitai.com',\n      password: 'maria123',\n      isAdmin: false,\n      profile: {\n        age: 28,\n        gender: 'feminino',\n        height: 165,\n        weight: 60,\n        activityLevel: 'moderado',\n        goal: 'manter-peso-perder-gordura',\n        preferredMuscleGroups: ['pernas', 'glúteos']\n      },\n      createdAt: new Date()\n    }\n  ];\n};\n\n// Simulação de banco de dados local (localStorage)\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(initialValue);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  useEffect(() => {\n    try {\n      if (typeof window !== 'undefined') {\n        const item = window.localStorage.getItem(key);\n        if (item) {\n          const parsedValue = JSON.parse(item);\n          setStoredValue(parsedValue);\n        } else if (key === 'fitness-app-users') {\n          // Inicializar dados demo se não existirem usuários\n          const demoUsers = initializeDemoUsers();\n          window.localStorage.setItem(key, JSON.stringify(demoUsers));\n          setStoredValue(demoUsers as T);\n        }\n      }\n    } catch (error) {\n      console.error(`Error reading localStorage key \"${key}\":`, error);\n      if (key === 'fitness-app-users') {\n        // Fallback para dados demo em caso de erro\n        const demoUsers = initializeDemoUsers();\n        setStoredValue(demoUsers as T);\n      }\n    } finally {\n      setIsInitialized(true);\n    }\n  }, [key]);\n\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      }\n    } catch (error) {\n      console.error(`Error setting localStorage key \"${key}\":`, error);\n    }\n  };\n\n  return [storedValue, setValue, isInitialized] as const;\n}\n\n// Hook para gerenciar usuários\nexport function useUsers() {\n  const [users, setUsers, isInitialized] = useLocalStorage<User[]>('fitness-app-users', []);\n\n  const addUser = (userData: Omit<User, 'id' | 'createdAt'>) => {\n    const newUser: User = {\n      ...userData,\n      id: Date.now().toString(),\n      createdAt: new Date(),\n    };\n    setUsers(prev => [...prev, newUser]);\n    return newUser;\n  };\n\n  const updateUser = (id: string, updates: Partial<User>) => {\n    setUsers(prev => prev.map(user => \n      user.id === id ? { ...user, ...updates } : user\n    ));\n  };\n\n  const deleteUser = (id: string) => {\n    setUsers(prev => prev.filter(user => user.id !== id));\n  };\n\n  const getUserById = (id: string) => {\n    return users.find(user => user.id === id);\n  };\n\n  const authenticateUser = (email: string, password: string) => {\n    console.log('Tentando autenticar:', email, password);\n    console.log('Usuários disponíveis:', users);\n    const user = users.find(user => user.email === email && user.password === password);\n    console.log('Usuário encontrado:', user);\n    return user;\n  };\n\n  return {\n    users,\n    addUser,\n    updateUser,\n    deleteUser,\n    getUserById,\n    authenticateUser,\n    isInitialized\n  };\n}\n\n// Hook para gerenciar planos de dieta\nexport function useDietPlans() {\n  const [dietPlans, setDietPlans] = useLocalStorage<DietPlan[]>('fitness-app-diet-plans', []);\n\n  const addDietPlan = (plan: Omit<DietPlan, 'createdAt'>) => {\n    const newPlan: DietPlan = {\n      ...plan,\n      createdAt: new Date(),\n    };\n    setDietPlans(prev => [...prev.filter(p => p.userId !== plan.userId), newPlan]);\n    return newPlan;\n  };\n\n  const getDietPlanByUserId = (userId: string) => {\n    return dietPlans.find(plan => plan.userId === userId);\n  };\n\n  return {\n    dietPlans,\n    addDietPlan,\n    getDietPlanByUserId\n  };\n}\n\n// Hook para gerenciar planos de treino\nexport function useWorkoutPlans() {\n  const [workoutPlans, setWorkoutPlans] = useLocalStorage<WorkoutPlan[]>('fitness-app-workout-plans', []);\n\n  const addWorkoutPlan = (plan: Omit<WorkoutPlan, 'createdAt'>) => {\n    const newPlan: WorkoutPlan = {\n      ...plan,\n      createdAt: new Date(),\n    };\n    setWorkoutPlans(prev => [...prev.filter(p => p.userId !== plan.userId), newPlan]);\n    return newPlan;\n  };\n\n  const getWorkoutPlanByUserId = (userId: string) => {\n    return workoutPlans.find(plan => plan.userId === userId);\n  };\n\n  return {\n    workoutPlans,\n    addWorkoutPlan,\n    getWorkoutPlanByUserId\n  };\n}\n\n// Hook para gerenciar progresso de treino\nexport function useWorkoutProgress() {\n  const [workoutProgress, setWorkoutProgress] = useLocalStorage<WorkoutProgress[]>('fitness-app-workout-progress', []);\n\n  const addWorkoutProgress = (progress: Omit<WorkoutProgress, 'createdAt'>) => {\n    const newProgress: WorkoutProgress = {\n      ...progress,\n      createdAt: new Date(),\n    };\n    setWorkoutProgress(prev => [...prev, newProgress]);\n    return newProgress;\n  };\n\n  const getWorkoutProgressByUserId = (userId: string) => {\n    return workoutProgress.filter(progress => progress.userId === userId);\n  };\n\n  const getWorkoutProgressByDate = (userId: string, date: string) => {\n    return workoutProgress.find(progress => \n      progress.userId === userId && progress.date === date\n    );\n  };\n\n  const updateWorkoutProgress = (userId: string, date: string, workoutDay: string, updates: Partial<WorkoutProgress>) => {\n    setWorkoutProgress(prev => prev.map(progress => \n      progress.userId === userId && progress.date === date && progress.workoutDay === workoutDay\n        ? { ...progress, ...updates }\n        : progress\n    ));\n  };\n\n  return {\n    workoutProgress,\n    addWorkoutProgress,\n    getWorkoutProgressByUserId,\n    getWorkoutProgressByDate,\n    updateWorkoutProgress\n  };\n}\n\n// Hook para gerenciar análises corporais\nexport function useBodyAnalyses() {\n  const [bodyAnalyses, setBodyAnalyses] = useLocalStorage<BodyAnalysis[]>('fitness-app-body-analyses', []);\n\n  const addBodyAnalysis = (analysis: Omit<BodyAnalysis, 'createdAt'>) => {\n    const newAnalysis: BodyAnalysis = {\n      ...analysis,\n      createdAt: new Date(),\n    };\n    setBodyAnalyses(prev => [...prev.filter(a => a.userId !== analysis.userId), newAnalysis]);\n    return newAnalysis;\n  };\n\n  const getBodyAnalysisByUserId = (userId: string) => {\n    return bodyAnalyses.find(analysis => analysis.userId === userId);\n  };\n\n  return {\n    bodyAnalyses,\n    addBodyAnalysis,\n    getBodyAnalysisByUserId\n  };\n}\n\n// Hook para sessão atual\nexport function useCurrentUser() {\n  const [currentUser, setCurrentUser] = useLocalStorage<User | null>('fitness-app-current-user', null);\n\n  const login = (user: User) => {\n    console.log('Fazendo login do usuário:', user);\n    setCurrentUser(user);\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n  };\n\n  const updateCurrentUser = (updates: Partial<User>) => {\n    if (currentUser) {\n      const updatedUser = { ...currentUser, ...updates };\n      setCurrentUser(updatedUser);\n    }\n  };\n\n  return {\n    currentUser,\n    login,\n    logout,\n    updateCurrentUser,\n    isLoggedIn: !!currentUser,\n    isAdmin: currentUser?.isAdmin || false\n  };\n}"],"names":[],"mappings":";;;;;;;;;AAEA;AAFA;;AAKA,gCAAgC;AAChC,MAAM,sBAAsB;IAC1B,OAAO;QACL;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,UAAU;YACV,SAAS;YACT,WAAW,IAAI;QACjB;QACA;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,UAAU;YACV,SAAS;YACT,WAAW,IAAI;QACjB;QACA;YACE,IAAI;YACJ,MAAM;YACN,OAAO;YACP,UAAU;YACV,SAAS;YACT,SAAS;gBACP,KAAK;gBACL,QAAQ;gBACR,QAAQ;gBACR,QAAQ;gBACR,eAAe;gBACf,MAAM;gBACN,uBAAuB;oBAAC;oBAAU;iBAAU;YAC9C;YACA,WAAW,IAAI;QACjB;KACD;AACH;AAGO,SAAS,gBAAmB,GAAW,EAAE,YAAe;IAC7D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAK;IAClD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI;YACF;;QAYF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,gCAAgC,EAAE,IAAI,EAAE,CAAC,EAAE;YAC1D,IAAI,QAAQ,qBAAqB;gBAC/B,2CAA2C;gBAC3C,MAAM,YAAY;gBAClB,eAAe;YACjB;QACF,SAAU;YACR,iBAAiB;QACnB;IACF,GAAG;QAAC;KAAI;IAER,MAAM,WAAW,CAAC;QAChB,IAAI;YACF,MAAM,eAAe,iBAAiB,WAAW,MAAM,eAAe;YACtE,eAAe;YACf;;QAGF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,gCAAgC,EAAE,IAAI,EAAE,CAAC,EAAE;QAC5D;IACF;IAEA,OAAO;QAAC;QAAa;QAAU;KAAc;AAC/C;AAGO,SAAS;IACd,MAAM,CAAC,OAAO,UAAU,cAAc,GAAG,gBAAwB,qBAAqB,EAAE;IAExF,MAAM,UAAU,CAAC;QACf,MAAM,UAAgB;YACpB,GAAG,QAAQ;YACX,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,WAAW,IAAI;QACjB;QACA,SAAS,CAAA,OAAQ;mBAAI;gBAAM;aAAQ;QACnC,OAAO;IACT;IAEA,MAAM,aAAa,CAAC,IAAY;QAC9B,SAAS,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,OACxB,KAAK,EAAE,KAAK,KAAK;oBAAE,GAAG,IAAI;oBAAE,GAAG,OAAO;gBAAC,IAAI;IAE/C;IAEA,MAAM,aAAa,CAAC;QAClB,SAAS,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;IACnD;IAEA,MAAM,cAAc,CAAC;QACnB,OAAO,MAAM,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;IACxC;IAEA,MAAM,mBAAmB,CAAC,OAAe;QACvC,QAAQ,GAAG,CAAC,wBAAwB,OAAO;QAC3C,QAAQ,GAAG,CAAC,yBAAyB;QACrC,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,OAAQ,KAAK,KAAK,KAAK,SAAS,KAAK,QAAQ,KAAK;QAC1E,QAAQ,GAAG,CAAC,uBAAuB;QACnC,OAAO;IACT;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;AAGO,SAAS;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,gBAA4B,0BAA0B,EAAE;IAE1F,MAAM,cAAc,CAAC;QACnB,MAAM,UAAoB;YACxB,GAAG,IAAI;YACP,WAAW,IAAI;QACjB;QACA,aAAa,CAAA,OAAQ;mBAAI,KAAK,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,KAAK,MAAM;gBAAG;aAAQ;QAC7E,OAAO;IACT;IAEA,MAAM,sBAAsB,CAAC;QAC3B,OAAO,UAAU,IAAI,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK;IAChD;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF;AAGO,SAAS;IACd,MAAM,CAAC,cAAc,gBAAgB,GAAG,gBAA+B,6BAA6B,EAAE;IAEtG,MAAM,iBAAiB,CAAC;QACtB,MAAM,UAAuB;YAC3B,GAAG,IAAI;YACP,WAAW,IAAI;QACjB;QACA,gBAAgB,CAAA,OAAQ;mBAAI,KAAK,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,KAAK,MAAM;gBAAG;aAAQ;QAChF,OAAO;IACT;IAEA,MAAM,yBAAyB,CAAC;QAC9B,OAAO,aAAa,IAAI,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK;IACnD;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF;AAGO,SAAS;IACd,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,gBAAmC,gCAAgC,EAAE;IAEnH,MAAM,qBAAqB,CAAC;QAC1B,MAAM,cAA+B;YACnC,GAAG,QAAQ;YACX,WAAW,IAAI;QACjB;QACA,mBAAmB,CAAA,OAAQ;mBAAI;gBAAM;aAAY;QACjD,OAAO;IACT;IAEA,MAAM,6BAA6B,CAAC;QAClC,OAAO,gBAAgB,MAAM,CAAC,CAAA,WAAY,SAAS,MAAM,KAAK;IAChE;IAEA,MAAM,2BAA2B,CAAC,QAAgB;QAChD,OAAO,gBAAgB,IAAI,CAAC,CAAA,WAC1B,SAAS,MAAM,KAAK,UAAU,SAAS,IAAI,KAAK;IAEpD;IAEA,MAAM,wBAAwB,CAAC,QAAgB,MAAc,YAAoB;QAC/E,mBAAmB,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,WAClC,SAAS,MAAM,KAAK,UAAU,SAAS,IAAI,KAAK,QAAQ,SAAS,UAAU,KAAK,aAC5E;oBAAE,GAAG,QAAQ;oBAAE,GAAG,OAAO;gBAAC,IAC1B;IAER;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF;AAGO,SAAS;IACd,MAAM,CAAC,cAAc,gBAAgB,GAAG,gBAAgC,6BAA6B,EAAE;IAEvG,MAAM,kBAAkB,CAAC;QACvB,MAAM,cAA4B;YAChC,GAAG,QAAQ;YACX,WAAW,IAAI;QACjB;QACA,gBAAgB,CAAA,OAAQ;mBAAI,KAAK,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,SAAS,MAAM;gBAAG;aAAY;QACxF,OAAO;IACT;IAEA,MAAM,0BAA0B,CAAC;QAC/B,OAAO,aAAa,IAAI,CAAC,CAAA,WAAY,SAAS,MAAM,KAAK;IAC3D;IAEA,OAAO;QACL;QACA;QACA;IACF;AACF;AAGO,SAAS;IACd,MAAM,CAAC,aAAa,eAAe,GAAG,gBAA6B,4BAA4B;IAE/F,MAAM,QAAQ,CAAC;QACb,QAAQ,GAAG,CAAC,6BAA6B;QACzC,eAAe;IACjB;IAEA,MAAM,SAAS;QACb,eAAe;IACjB;IAEA,MAAM,oBAAoB,CAAC;QACzB,IAAI,aAAa;YACf,MAAM,cAAc;gBAAE,GAAG,WAAW;gBAAE,GAAG,OAAO;YAAC;YACjD,eAAe;QACjB;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA,YAAY,CAAC,CAAC;QACd,SAAS,aAAa,WAAW;IACnC;AACF","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/AdminPanel.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { useCurrentUser, useUsers } from '@/lib/hooks';\nimport { User, Plus, Users, Settings, LogOut, Eye, Trash2 } from 'lucide-react';\n\nexport function AdminPanel() {\n  const [newUser, setNewUser] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [showPasswords, setShowPasswords] = useState<{[key: string]: boolean}>({});\n  \n  const { logout } = useCurrentUser();\n  const { users, addUser, deleteUser } = useUsers();\n\n  // Inicializar usuários demo se não existirem\n  useEffect(() => {\n    if (users.length === 0) {\n      addUser({\n        name: 'Administrador',\n        email: 'admin@fitai.com',\n        password: 'admin123',\n        isAdmin: true\n      });\n      addUser({\n        name: 'João Silva',\n        email: 'user@fitai.com',\n        password: 'user123',\n        isAdmin: false\n      });\n    }\n  }, [users.length, addUser]);\n\n  const handleAddUser = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (newUser.name && newUser.email && newUser.password) {\n      addUser({\n        ...newUser,\n        isAdmin: false\n      });\n      setNewUser({ name: '', email: '', password: '' });\n    }\n  };\n\n  const togglePasswordVisibility = (userId: string) => {\n    setShowPasswords(prev => ({\n      ...prev,\n      [userId]: !prev[userId]\n    }));\n  };\n\n  const regularUsers = users.filter(user => !user.isAdmin);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-blue-950 dark:to-indigo-950\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-blue-900 shadow-sm border-b border-blue-100 dark:border-blue-800\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-2 bg-blue-600 rounded-lg\">\n                <Settings className=\"w-6 h-6 text-white\" />\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-blue-900 dark:text-blue-100\">\n                  Painel Administrativo\n                </h1>\n                <p className=\"text-blue-600 dark:text-blue-300\">\n                  Gerencie usuários do FitAI Coach\n                </p>\n              </div>\n            </div>\n            <Button \n              onClick={logout}\n              variant=\"outline\"\n              className=\"border-blue-200 text-blue-700 hover:bg-blue-50\"\n            >\n              <LogOut className=\"w-4 h-4 mr-2\" />\n              Sair\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <Tabs defaultValue=\"users\" className=\"space-y-6\">\n          <TabsList className=\"bg-white dark:bg-blue-900 border border-blue-200 dark:border-blue-700\">\n            <TabsTrigger value=\"users\" className=\"data-[state=active]:bg-blue-600 data-[state=active]:text-white\">\n              <Users className=\"w-4 h-4 mr-2\" />\n              Usuários ({regularUsers.length})\n            </TabsTrigger>\n            <TabsTrigger value=\"add-user\" className=\"data-[state=active]:bg-blue-600 data-[state=active]:text-white\">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Novo Usuário\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Lista de Usuários */}\n          <TabsContent value=\"users\" className=\"space-y-4\">\n            <Card className=\"border-blue-100 dark:border-blue-800\">\n              <CardHeader>\n                <CardTitle className=\"text-blue-900 dark:text-blue-100\">\n                  Usuários Cadastrados\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                {regularUsers.length === 0 ? (\n                  <div className=\"text-center py-8 text-blue-600 dark:text-blue-400\">\n                    <Users className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                    <p>Nenhum usuário cadastrado ainda</p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {regularUsers.map((user) => (\n                      <div key={user.id} className=\"flex items-center justify-between p-4 bg-blue-50 dark:bg-blue-900 rounded-lg border border-blue-100 dark:border-blue-800\">\n                        <div className=\"flex items-center gap-4\">\n                          <div className=\"p-2 bg-blue-600 rounded-full\">\n                            <User className=\"w-5 h-5 text-white\" />\n                          </div>\n                          <div>\n                            <h3 className=\"font-semibold text-blue-900 dark:text-blue-100\">\n                              {user.name}\n                            </h3>\n                            <p className=\"text-blue-600 dark:text-blue-300\">\n                              {user.email}\n                            </p>\n                            <div className=\"flex items-center gap-2 mt-1\">\n                              <span className=\"text-sm text-blue-700 dark:text-blue-300\">\n                                Senha: {showPasswords[user.id] ? user.password : '••••••••'}\n                              </span>\n                              <Button\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={() => togglePasswordVisibility(user.id)}\n                                className=\"h-6 w-6 p-0 text-blue-600 hover:text-blue-800\"\n                              >\n                                <Eye className=\"w-3 h-3\" />\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Badge \n                            variant={user.profile ? \"default\" : \"secondary\"}\n                            className={user.profile ? \"bg-green-100 text-green-800\" : \"bg-gray-100 text-gray-600\"}\n                          >\n                            {user.profile ? 'Perfil Completo' : 'Perfil Pendente'}\n                          </Badge>\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => deleteUser(user.id)}\n                            className=\"text-red-600 border-red-200 hover:bg-red-50\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Adicionar Usuário */}\n          <TabsContent value=\"add-user\">\n            <Card className=\"border-blue-100 dark:border-blue-800\">\n              <CardHeader>\n                <CardTitle className=\"text-blue-900 dark:text-blue-100\">\n                  Cadastrar Novo Usuário\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleAddUser} className=\"space-y-4 max-w-md\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"name\" className=\"text-blue-800 dark:text-blue-200\">\n                      Nome Completo\n                    </Label>\n                    <Input\n                      id=\"name\"\n                      value={newUser.name}\n                      onChange={(e) => setNewUser(prev => ({ ...prev, name: e.target.value }))}\n                      placeholder=\"Nome do usuário\"\n                      required\n                      className=\"border-blue-200 dark:border-blue-700 focus:ring-blue-500\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email\" className=\"text-blue-800 dark:text-blue-200\">\n                      Email\n                    </Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      value={newUser.email}\n                      onChange={(e) => setNewUser(prev => ({ ...prev, email: e.target.value }))}\n                      placeholder=\"email@exemplo.com\"\n                      required\n                      className=\"border-blue-200 dark:border-blue-700 focus:ring-blue-500\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"password\" className=\"text-blue-800 dark:text-blue-200\">\n                      Senha\n                    </Label>\n                    <Input\n                      id=\"password\"\n                      type=\"password\"\n                      value={newUser.password}\n                      onChange={(e) => setNewUser(prev => ({ ...prev, password: e.target.value }))}\n                      placeholder=\"Senha temporária\"\n                      required\n                      className=\"border-blue-200 dark:border-blue-700 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <Button \n                    type=\"submit\" \n                    className=\"bg-blue-600 hover:bg-blue-700 text-white\"\n                  >\n                    <Plus className=\"w-4 h-4 mr-2\" />\n                    Cadastrar Usuário\n                  </Button>\n                </form>\n\n                <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900 rounded-lg\">\n                  <h4 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-2\">\n                    Instruções:\n                  </h4>\n                  <ul className=\"text-sm text-blue-700 dark:text-blue-300 space-y-1\">\n                    <li>• O usuário receberá as credenciais de acesso</li>\n                    <li>• No primeiro login, ele completará o perfil</li>\n                    <li>• Após completar o perfil, terá acesso às funcionalidades</li>\n                  </ul>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1238, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1461, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,qMAAA,CAAA,aAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1504, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/lib/fitness-utils.ts"],"sourcesContent":["import { UserProfile, FoodEntry, DietPlan, WorkoutPlan } from './types';\n\n// Cálculo da Taxa Metabólica Basal (TMB)\nexport function calculateTMB(profile: UserProfile): number {\n  const { age, gender, height, weight } = profile;\n  \n  if (gender === 'masculino') {\n    return 88.362 + (13.397 * weight) + (4.799 * height) - (5.677 * age);\n  } else {\n    return 447.593 + (9.247 * weight) + (3.098 * height) - (4.330 * age);\n  }\n}\n\n// Cálculo das calorias diárias baseado no nível de atividade\nexport function calculateDailyCalories(tmb: number, activityLevel: string, goal: string): number {\n  const activityMultipliers = {\n    'sedentario': 1.2,\n    'leve': 1.375,\n    'moderado': 1.55,\n    'intenso': 1.725,\n    'muito-intenso': 1.9\n  };\n  \n  const baseCalories = tmb * activityMultipliers[activityLevel as keyof typeof activityMultipliers];\n  \n  switch (goal) {\n    case 'emagrecer':\n      return Math.round(baseCalories * 0.8); // Déficit de 20%\n    case 'engordar':\n      return Math.round(baseCalories * 1.15); // Superávit de 15%\n    case 'manter-peso-perder-gordura':\n      return Math.round(baseCalories * 0.95); // Déficit leve de 5%\n    default:\n      return Math.round(baseCalories);\n  }\n}\n\n// Cálculo da ingestão de água recomendada\nexport function calculateWaterIntake(weight: number, activityLevel: string): number {\n  let baseWater = weight * 0.035; // 35ml por kg\n  \n  if (activityLevel === 'intenso' || activityLevel === 'muito-intenso') {\n    baseWater += 0.5; // +500ml para atividade intensa\n  }\n  \n  return Math.round(baseWater * 10) / 10; // Arredondar para 1 casa decimal\n}\n\n// Geração de plano de dieta com IA\nexport async function generateDietPlan(\n  profile: UserProfile, \n  currentDiet: FoodEntry[]\n): Promise<DietPlan> {\n  const tmb = calculateTMB(profile);\n  const dailyCalories = calculateDailyCalories(tmb, profile.activityLevel, profile.goal);\n  const waterIntake = calculateWaterIntake(profile.weight, profile.activityLevel);\n  \n  // Análise da dieta atual\n  const currentDietAnalysis = analyzeFoodEntries(currentDiet);\n  \n  // Distribuição de macronutrientes baseada no objetivo\n  const macros = calculateMacroDistribution(dailyCalories, profile.goal);\n  \n  // Geração das refeições\n  const meals = await generateMeals(dailyCalories, macros, currentDietAnalysis, profile);\n  \n  return {\n    userId: '', // Será preenchido na implementação\n    tmb,\n    dailyCalories,\n    waterIntake,\n    meals,\n    macros,\n    createdAt: new Date()\n  };\n}\n\nfunction analyzeFoodEntries(entries: FoodEntry[]) {\n  return {\n    preferredFoods: entries.map(e => e.food),\n    mealTimes: entries.map(e => ({ meal: e.meal, time: e.time })),\n    portions: entries.map(e => ({ food: e.food, quantity: e.quantity, measurement: e.measurement }))\n  };\n}\n\nfunction calculateMacroDistribution(calories: number, goal: string) {\n  let proteinPercent = 0.25;\n  let carbPercent = 0.45;\n  let fatPercent = 0.30;\n  \n  if (goal === 'engordar') {\n    proteinPercent = 0.20;\n    carbPercent = 0.50;\n    fatPercent = 0.30;\n  } else if (goal === 'emagrecer') {\n    proteinPercent = 0.30;\n    carbPercent = 0.35;\n    fatPercent = 0.35;\n  }\n  \n  return {\n    protein: Math.round((calories * proteinPercent) / 4), // 4 cal/g\n    carbs: Math.round((calories * carbPercent) / 4), // 4 cal/g\n    fat: Math.round((calories * fatPercent) / 9) // 9 cal/g\n  };\n}\n\nasync function generateMeals(calories: number, macros: any, currentAnalysis: any, profile: UserProfile) {\n  // Distribuição calórica por refeição\n  const mealDistribution = {\n    'Café da Manhã': 0.25,\n    'Lanche da Manhã': 0.10,\n    'Almoço': 0.30,\n    'Lanche da Tarde': 0.10,\n    'Jantar': 0.20,\n    'Ceia': 0.05\n  };\n  \n  const meals = [];\n  \n  for (const [mealName, percentage] of Object.entries(mealDistribution)) {\n    const mealCalories = Math.round(calories * percentage);\n    const meal = {\n      meal: mealName,\n      time: getMealTime(mealName),\n      foods: await generateMealFoods(mealCalories, macros, mealName, profile)\n    };\n    meals.push(meal);\n  }\n  \n  return meals;\n}\n\nfunction getMealTime(mealName: string): string {\n  const times = {\n    'Café da Manhã': '07:00',\n    'Lanche da Manhã': '10:00',\n    'Almoço': '12:30',\n    'Lanche da Tarde': '15:30',\n    'Jantar': '19:00',\n    'Ceia': '21:30'\n  };\n  return times[mealName as keyof typeof times] || '12:00';\n}\n\nasync function generateMealFoods(calories: number, macros: any, mealName: string, profile: UserProfile) {\n  // Base de alimentos por refeição\n  const foodDatabase = {\n    'Café da Manhã': [\n      { food: 'Aveia', calories: 68, protein: 2.4, carbs: 12, fat: 1.4, quantity: '30g' },\n      { food: 'Banana', calories: 89, protein: 1.1, carbs: 23, fat: 0.3, quantity: '1 unidade média' },\n      { food: 'Leite desnatado', calories: 42, protein: 3.4, carbs: 5, fat: 0.1, quantity: '200ml' },\n      { food: 'Ovo', calories: 70, protein: 6, carbs: 0.6, fat: 5, quantity: '1 unidade' },\n      { food: 'Pão integral', calories: 69, protein: 3.6, carbs: 11.6, fat: 1.2, quantity: '1 fatia' }\n    ],\n    'Almoço': [\n      { food: 'Arroz integral', calories: 111, protein: 2.6, carbs: 22, fat: 0.9, quantity: '100g' },\n      { food: 'Feijão', calories: 76, protein: 4.8, carbs: 14, fat: 0.5, quantity: '100g' },\n      { food: 'Frango grelhado', calories: 165, protein: 31, carbs: 0, fat: 3.6, quantity: '100g' },\n      { food: 'Brócolis', calories: 25, protein: 3, carbs: 5, fat: 0.3, quantity: '100g' },\n      { food: 'Salada verde', calories: 15, protein: 1.5, carbs: 3, fat: 0.2, quantity: '100g' }\n    ],\n    'Jantar': [\n      { food: 'Batata doce', calories: 86, protein: 2, carbs: 20, fat: 0.1, quantity: '100g' },\n      { food: 'Salmão grelhado', calories: 208, protein: 22, carbs: 0, fat: 12, quantity: '100g' },\n      { food: 'Aspargos', calories: 20, protein: 2.2, carbs: 4, fat: 0.1, quantity: '100g' },\n      { food: 'Quinoa', calories: 120, protein: 4.4, carbs: 22, fat: 1.9, quantity: '100g' }\n    ]\n  };\n  \n  const availableFoods = foodDatabase[mealName as keyof typeof foodDatabase] || foodDatabase['Almoço'];\n  \n  // Seleção inteligente de alimentos para atingir as calorias da refeição\n  const selectedFoods = [];\n  let remainingCalories = calories;\n  \n  // Algoritmo simples de seleção\n  for (let i = 0; i < Math.min(3, availableFoods.length) && remainingCalories > 50; i++) {\n    const food = availableFoods[i];\n    if (food.calories <= remainingCalories * 1.2) {\n      selectedFoods.push(food);\n      remainingCalories -= food.calories;\n    }\n  }\n  \n  return selectedFoods;\n}\n\n// Geração de plano de treino\nexport async function generateWorkoutPlan(\n  profile: UserProfile,\n  focusAreas: string[]\n): Promise<WorkoutPlan> {\n  const workouts = [];\n  \n  // Base de exercícios por grupo muscular\n  const exerciseDatabase = {\n    'peito': [\n      { name: 'Supino reto', sets: 4, reps: '8-12', rest: '90s', alternatives: ['Supino inclinado', 'Flexão de braço'] },\n      { name: 'Supino inclinado', sets: 3, reps: '10-12', rest: '90s', alternatives: ['Supino reto', 'Crucifixo'] },\n      { name: 'Flexão de braço', sets: 3, reps: '12-15', rest: '60s', alternatives: ['Supino', 'Paralelas'] }\n    ],\n    'costas': [\n      { name: 'Puxada frontal', sets: 4, reps: '8-12', rest: '90s', alternatives: ['Barra fixa', 'Remada curvada'] },\n      { name: 'Remada curvada', sets: 4, reps: '8-10', rest: '90s', alternatives: ['Remada sentada', 'Puxada'] },\n      { name: 'Remada sentada', sets: 3, reps: '10-12', rest: '90s', alternatives: ['Remada curvada', 'Puxada'] }\n    ],\n    'pernas': [\n      { name: 'Agachamento', sets: 4, reps: '10-15', rest: '120s', alternatives: ['Leg press', 'Agachamento livre'] },\n      { name: 'Leg press', sets: 4, reps: '12-15', rest: '90s', alternatives: ['Agachamento', 'Hack squat'] },\n      { name: 'Extensão de pernas', sets: 3, reps: '12-15', rest: '60s', alternatives: ['Agachamento', 'Afundo'] }\n    ],\n    'bracos': [\n      { name: 'Rosca direta', sets: 3, reps: '10-12', rest: '60s', alternatives: ['Rosca martelo', 'Rosca concentrada'] },\n      { name: 'Tríceps testa', sets: 3, reps: '10-12', rest: '60s', alternatives: ['Tríceps pulley', 'Mergulho'] },\n      { name: 'Rosca martelo', sets: 3, reps: '12-15', rest: '60s', alternatives: ['Rosca direta', 'Rosca alternada'] }\n    ],\n    'ombros': [\n      { name: 'Desenvolvimento militar', sets: 4, reps: '8-12', rest: '90s', alternatives: ['Desenvolvimento com halteres', 'Elevação frontal'] },\n      { name: 'Elevação lateral', sets: 3, reps: '12-15', rest: '60s', alternatives: ['Elevação frontal', 'Desenvolvimento'] },\n      { name: 'Elevação posterior', sets: 3, reps: '12-15', rest: '60s', alternatives: ['Crucifixo inverso', 'Remada alta'] }\n    ]\n  };\n  \n  // Divisão de treino baseada no nível de atividade\n  const trainingDays = profile.activityLevel === 'sedentario' || profile.activityLevel === 'leve' ? 3 : 5;\n  \n  if (trainingDays === 3) {\n    // Treino ABC\n    workouts.push(\n      { day: 'Segunda-feira', muscleGroup: 'Peito e Tríceps', exercises: [...exerciseDatabase.peito.slice(0, 2), ...exerciseDatabase.bracos.filter(e => e.name.includes('Tríceps'))] },\n      { day: 'Quarta-feira', muscleGroup: 'Costas e Bíceps', exercises: [...exerciseDatabase.costas.slice(0, 2), ...exerciseDatabase.bracos.filter(e => e.name.includes('Rosca'))] },\n      { day: 'Sexta-feira', muscleGroup: 'Pernas e Ombros', exercises: [...exerciseDatabase.pernas.slice(0, 2), ...exerciseDatabase.ombros.slice(0, 2)] }\n    );\n  } else {\n    // Treino ABCDE\n    workouts.push(\n      { day: 'Segunda-feira', muscleGroup: 'Peito', exercises: exerciseDatabase.peito },\n      { day: 'Terça-feira', muscleGroup: 'Costas', exercises: exerciseDatabase.costas },\n      { day: 'Quarta-feira', muscleGroup: 'Pernas', exercises: exerciseDatabase.pernas },\n      { day: 'Quinta-feira', muscleGroup: 'Ombros', exercises: exerciseDatabase.ombros },\n      { day: 'Sexta-feira', muscleGroup: 'Braços', exercises: exerciseDatabase.bracos }\n    );\n  }\n  \n  // Priorizar grupos musculares preferidos\n  if (focusAreas.length > 0) {\n    workouts.forEach(workout => {\n      if (focusAreas.some(area => workout.muscleGroup.toLowerCase().includes(area.toLowerCase()))) {\n        // Adicionar um exercício extra para grupos prioritários\n        const extraExercise = exerciseDatabase[focusAreas[0].toLowerCase() as keyof typeof exerciseDatabase]?.[0];\n        if (extraExercise && !workout.exercises.find(e => e.name === extraExercise.name)) {\n          workout.exercises.push(extraExercise);\n        }\n      }\n    });\n  }\n  \n  return {\n    userId: '',\n    focusAreas,\n    workouts,\n    createdAt: new Date()\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2006, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/lib/subscription-utils.ts"],"sourcesContent":["import { User, UserSubscription } from './types';\n\nexport function hasActiveSubscription(user: User): boolean {\n  if (!user.subscription) return false;\n  \n  const now = new Date();\n  return (\n    user.subscription.status === 'active' &&\n    user.subscription.endDate > now\n  );\n}\n\nexport function canAccessAI(user: User): boolean {\n  return hasActiveSubscription(user);\n}\n\nexport function canUseDiet(user: User): boolean {\n  if (!hasActiveSubscription(user)) return false;\n  \n  const subscription = user.subscription!;\n  \n  if (subscription.plan === 'premium') {\n    return true; // Dietas ilimitadas\n  }\n  \n  const maxDiets = subscription.plan === 'starter' ? 1 : 2;\n  return subscription.dietsUsedThisMonth < maxDiets;\n}\n\nexport function canChangeDict(user: User): boolean {\n  if (!hasActiveSubscription(user)) return false;\n  \n  const subscription = user.subscription!;\n  return subscription.plan === 'standard' || subscription.plan === 'premium';\n}\n\nexport function canUseWorkout(user: User): boolean {\n  if (!hasActiveSubscription(user)) return false;\n  \n  const subscription = user.subscription!;\n  \n  const maxWorkouts = {\n    starter: 1,\n    standard: 2,\n    premium: 4\n  }[subscription.plan];\n  \n  return subscription.workoutsUsedThisMonth < maxWorkouts;\n}\n\nexport function canConsultSupplement(user: User): boolean {\n  if (!hasActiveSubscription(user)) return false;\n  \n  return user.subscription!.plan === 'premium';\n}\n\nexport function canDowngrade(user: User): boolean {\n  if (!hasActiveSubscription(user)) return false;\n  \n  const subscription = user.subscription!;\n  \n  if (!subscription.downgradableDate) return false;\n  \n  const now = new Date();\n  return now >= subscription.downgradableDate;\n}\n\nexport function getSubscriptionLimits(user: User) {\n  if (!hasActiveSubscription(user)) {\n    return {\n      dietsPerMonth: 0,\n      workoutsPerMonth: 0,\n      canChangeDiet: false,\n      supplementConsultation: false\n    };\n  }\n  \n  const subscription = user.subscription!;\n  \n  const limits = {\n    starter: {\n      dietsPerMonth: 1,\n      workoutsPerMonth: 1,\n      canChangeDiet: false,\n      supplementConsultation: false\n    },\n    standard: {\n      dietsPerMonth: 2,\n      workoutsPerMonth: 2,\n      canChangeDiet: true,\n      supplementConsultation: false\n    },\n    premium: {\n      dietsPerMonth: Infinity,\n      workoutsPerMonth: 4,\n      canChangeDiet: true,\n      supplementConsultation: true\n    }\n  };\n  \n  return limits[subscription.plan];\n}\n\nexport function getUsageStatus(user: User) {\n  if (!hasActiveSubscription(user)) {\n    return {\n      dietsUsed: 0,\n      workoutsUsed: 0,\n      dietsRemaining: 0,\n      workoutsRemaining: 0\n    };\n  }\n  \n  const subscription = user.subscription!;\n  const limits = getSubscriptionLimits(user);\n  \n  return {\n    dietsUsed: subscription.dietsUsedThisMonth,\n    workoutsUsed: subscription.workoutsUsedThisMonth,\n    dietsRemaining: limits.dietsPerMonth === Infinity \n      ? Infinity \n      : Math.max(0, limits.dietsPerMonth - subscription.dietsUsedThisMonth),\n    workoutsRemaining: Math.max(0, limits.workoutsPerMonth - subscription.workoutsUsedThisMonth)\n  };\n}"],"names":[],"mappings":";;;;;;;;;;;AAEO,SAAS,sBAAsB,IAAU;IAC9C,IAAI,CAAC,KAAK,YAAY,EAAE,OAAO;IAE/B,MAAM,MAAM,IAAI;IAChB,OACE,KAAK,YAAY,CAAC,MAAM,KAAK,YAC7B,KAAK,YAAY,CAAC,OAAO,GAAG;AAEhC;AAEO,SAAS,YAAY,IAAU;IACpC,OAAO,sBAAsB;AAC/B;AAEO,SAAS,WAAW,IAAU;IACnC,IAAI,CAAC,sBAAsB,OAAO,OAAO;IAEzC,MAAM,eAAe,KAAK,YAAY;IAEtC,IAAI,aAAa,IAAI,KAAK,WAAW;QACnC,OAAO,MAAM,oBAAoB;IACnC;IAEA,MAAM,WAAW,aAAa,IAAI,KAAK,YAAY,IAAI;IACvD,OAAO,aAAa,kBAAkB,GAAG;AAC3C;AAEO,SAAS,cAAc,IAAU;IACtC,IAAI,CAAC,sBAAsB,OAAO,OAAO;IAEzC,MAAM,eAAe,KAAK,YAAY;IACtC,OAAO,aAAa,IAAI,KAAK,cAAc,aAAa,IAAI,KAAK;AACnE;AAEO,SAAS,cAAc,IAAU;IACtC,IAAI,CAAC,sBAAsB,OAAO,OAAO;IAEzC,MAAM,eAAe,KAAK,YAAY;IAEtC,MAAM,cAAc;QAClB,SAAS;QACT,UAAU;QACV,SAAS;IACX,CAAC,CAAC,aAAa,IAAI,CAAC;IAEpB,OAAO,aAAa,qBAAqB,GAAG;AAC9C;AAEO,SAAS,qBAAqB,IAAU;IAC7C,IAAI,CAAC,sBAAsB,OAAO,OAAO;IAEzC,OAAO,KAAK,YAAY,CAAE,IAAI,KAAK;AACrC;AAEO,SAAS,aAAa,IAAU;IACrC,IAAI,CAAC,sBAAsB,OAAO,OAAO;IAEzC,MAAM,eAAe,KAAK,YAAY;IAEtC,IAAI,CAAC,aAAa,gBAAgB,EAAE,OAAO;IAE3C,MAAM,MAAM,IAAI;IAChB,OAAO,OAAO,aAAa,gBAAgB;AAC7C;AAEO,SAAS,sBAAsB,IAAU;IAC9C,IAAI,CAAC,sBAAsB,OAAO;QAChC,OAAO;YACL,eAAe;YACf,kBAAkB;YAClB,eAAe;YACf,wBAAwB;QAC1B;IACF;IAEA,MAAM,eAAe,KAAK,YAAY;IAEtC,MAAM,SAAS;QACb,SAAS;YACP,eAAe;YACf,kBAAkB;YAClB,eAAe;YACf,wBAAwB;QAC1B;QACA,UAAU;YACR,eAAe;YACf,kBAAkB;YAClB,eAAe;YACf,wBAAwB;QAC1B;QACA,SAAS;YACP,eAAe;YACf,kBAAkB;YAClB,eAAe;YACf,wBAAwB;QAC1B;IACF;IAEA,OAAO,MAAM,CAAC,aAAa,IAAI,CAAC;AAClC;AAEO,SAAS,eAAe,IAAU;IACvC,IAAI,CAAC,sBAAsB,OAAO;QAChC,OAAO;YACL,WAAW;YACX,cAAc;YACd,gBAAgB;YAChB,mBAAmB;QACrB;IACF;IAEA,MAAM,eAAe,KAAK,YAAY;IACtC,MAAM,SAAS,sBAAsB;IAErC,OAAO;QACL,WAAW,aAAa,kBAAkB;QAC1C,cAAc,aAAa,qBAAqB;QAChD,gBAAgB,OAAO,aAAa,KAAK,WACrC,WACA,KAAK,GAAG,CAAC,GAAG,OAAO,aAAa,GAAG,aAAa,kBAAkB;QACtE,mBAAmB,KAAK,GAAG,CAAC,GAAG,OAAO,gBAAgB,GAAG,aAAa,qBAAqB;IAC7F;AACF","debugId":null}},
    {"offset": {"line": 2114, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/SubscriptionRequired.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Crown, Star, Zap, Lock, ArrowRight } from 'lucide-react';\n\ninterface SubscriptionRequiredProps {\n  onSelectPlan: (planId: 'starter' | 'standard' | 'premium') => void;\n  feature: string;\n}\n\nconst plans = [\n  {\n    id: 'starter' as const,\n    name: 'Starter',\n    price: 19.97,\n    icon: <Zap className=\"w-6 h-6\" />,\n    color: 'from-green-500 to-emerald-600',\n    features: [\n      '1 dieta nova por mês',\n      '1 treino por mês',\n      'Análise corporal básica',\n      'Suporte por email'\n    ]\n  },\n  {\n    id: 'standard' as const,\n    name: 'Standard',\n    price: 29.97,\n    icon: <Star className=\"w-6 h-6\" />,\n    color: 'from-blue-500 to-indigo-600',\n    features: [\n      'Pode mudar dieta no meio do mês',\n      '2 treinos por mês',\n      'Análise corporal avançada',\n      'Suporte prioritário'\n    ]\n  },\n  {\n    id: 'premium' as const,\n    name: 'Premium',\n    price: 49.97,\n    icon: <Crown className=\"w-6 h-6\" />,\n    color: 'from-purple-500 to-pink-600',\n    features: [\n      'Dietas ilimitadas (quando quiser)',\n      '4 treinos por mês',\n      'Consultoria de suplementação',\n      'Dúvidas sobre manipulados',\n      'Suporte 24/7'\n    ],\n    popular: true\n  }\n];\n\nexport function SubscriptionRequired({ onSelectPlan, feature }: SubscriptionRequiredProps) {\n  return (\n    <div className=\"max-w-6xl mx-auto p-6\">\n      {/* Header */}\n      <div className=\"text-center mb-8\">\n        <div className=\"mx-auto w-16 h-16 bg-orange-100 dark:bg-orange-900 rounded-full flex items-center justify-center mb-4\">\n          <Lock className=\"w-8 h-8 text-orange-600\" />\n        </div>\n        <h2 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\n          Você ainda não assinou um plano!\n        </h2>\n        <p className=\"text-lg text-gray-600 dark:text-gray-400 mb-2\">\n          Para continuar e ter acesso às informações da IA,\n        </p>\n        <p className=\"text-lg text-gray-600 dark:text-gray-400\">\n          escolha o plano que melhor se adequa a você.\n        </p>\n        {feature && (\n          <div className=\"mt-4 p-3 bg-blue-50 dark:bg-blue-900 rounded-lg\">\n            <p className=\"text-sm text-blue-700 dark:text-blue-300\">\n              Funcionalidade solicitada: <strong>{feature}</strong>\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Plans Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {plans.map((plan) => (\n          <Card\n            key={plan.id}\n            className={`relative overflow-hidden transition-all duration-300 hover:scale-105 ${\n              plan.popular\n                ? 'border-2 border-purple-200 dark:border-purple-800 shadow-2xl'\n                : 'shadow-xl hover:shadow-2xl border-gray-100 dark:border-gray-800'\n            }`}\n          >\n            {plan.popular && (\n              <div className=\"absolute top-0 right-0 bg-gradient-to-r from-purple-500 to-pink-500 text-white px-3 py-1 text-sm font-semibold\">\n                MAIS POPULAR\n              </div>\n            )}\n            \n            <CardHeader className=\"text-center pb-4\">\n              <div className={`mx-auto w-16 h-16 bg-gradient-to-r ${plan.color} rounded-full flex items-center justify-center mb-4 text-white`}>\n                {plan.icon}\n              </div>\n              <CardTitle className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\n                {plan.name}\n              </CardTitle>\n              <div className=\"text-center\">\n                <span className=\"text-3xl font-bold text-gray-900 dark:text-gray-100\">\n                  R$ {plan.price.toFixed(2).replace('.', ',')}\n                </span>\n                <span className=\"text-gray-600 dark:text-gray-400\">/mês</span>\n              </div>\n              {plan.id === 'premium' && (\n                <Badge variant=\"outline\" className=\"mx-auto mt-2 border-purple-300 text-purple-700\">\n                  Mínimo 4 meses\n                </Badge>\n              )}\n            </CardHeader>\n            \n            <CardContent className=\"pt-0\">\n              <ul className=\"space-y-3 mb-6\">\n                {plan.features.map((feature, index) => (\n                  <li key={index} className=\"flex items-start gap-3\">\n                    <div className=\"w-5 h-5 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mt-0.5 flex-shrink-0\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                    </div>\n                    <span className=\"text-gray-700 dark:text-gray-300 text-sm\">\n                      {feature}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n              \n              <Button\n                onClick={() => onSelectPlan(plan.id)}\n                className={`w-full bg-gradient-to-r ${plan.color} hover:opacity-90 text-white transition-all duration-300`}\n              >\n                Escolher {plan.name}\n                <ArrowRight className=\"w-4 h-4 ml-2\" />\n              </Button>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Important Notes */}\n      <div className=\"mt-8 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-6\">\n        <h3 className=\"font-semibold text-yellow-800 dark:text-yellow-200 mb-3\">\n          📋 Informações importantes sobre os planos:\n        </h3>\n        <ul className=\"space-y-2 text-sm text-yellow-700 dark:text-yellow-300\">\n          <li>• <strong>Upgrade:</strong> Pode ser feito a qualquer momento</li>\n          <li>• <strong>Downgrade:</strong> Só é possível após 4 meses na categoria atual</li>\n          <li>• <strong>Premium:</strong> Permanência mínima de 4 meses</li>\n          <li>• <strong>Renovação:</strong> Automática mensalmente</li>\n          <li>• <strong>Cancelamento:</strong> Pode ser feito a qualquer momento</li>\n        </ul>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2542, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/PaymentScreen.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  CreditCard, \n  Lock, \n  ArrowLeft, \n  Check, \n  Crown, \n  Star, \n  Zap,\n  Shield,\n  Calendar,\n  DollarSign\n} from 'lucide-react';\nimport { PaymentData } from '@/lib/types';\n\ninterface PaymentScreenProps {\n  selectedPlan: 'starter' | 'standard' | 'premium';\n  onBack: () => void;\n  onPaymentSuccess: () => void;\n}\n\nconst planDetails = {\n  starter: {\n    name: 'Starter',\n    price: 19.97,\n    icon: <Zap className=\"w-6 h-6\" />,\n    color: 'from-green-500 to-emerald-600'\n  },\n  standard: {\n    name: 'Standard',\n    price: 29.97,\n    icon: <Star className=\"w-6 h-6\" />,\n    color: 'from-blue-500 to-indigo-600'\n  },\n  premium: {\n    name: 'Premium',\n    price: 49.97,\n    icon: <Crown className=\"w-6 h-6\" />,\n    color: 'from-purple-500 to-pink-600'\n  }\n};\n\nexport function PaymentScreen({ selectedPlan, onBack, onPaymentSuccess }: PaymentScreenProps) {\n  const [paymentData, setPaymentData] = useState<PaymentData>({\n    cardNumber: '',\n    expiryDate: '',\n    cvv: '',\n    cardName: '',\n    cpf: '',\n    plan: selectedPlan\n  });\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const plan = planDetails[selectedPlan];\n\n  const formatCardNumber = (value: string) => {\n    const numbers = value.replace(/\\D/g, '');\n    return numbers.replace(/(\\d{4})(?=\\d)/g, '$1 ').trim();\n  };\n\n  const formatExpiryDate = (value: string) => {\n    const numbers = value.replace(/\\D/g, '');\n    if (numbers.length >= 2) {\n      return numbers.substring(0, 2) + '/' + numbers.substring(2, 4);\n    }\n    return numbers;\n  };\n\n  const formatCPF = (value: string) => {\n    const numbers = value.replace(/\\D/g, '');\n    return numbers.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!paymentData.cardNumber.replace(/\\s/g, '')) {\n      newErrors.cardNumber = 'Número do cartão é obrigatório';\n    } else if (paymentData.cardNumber.replace(/\\s/g, '').length !== 16) {\n      newErrors.cardNumber = 'Número do cartão deve ter 16 dígitos';\n    }\n\n    if (!paymentData.expiryDate) {\n      newErrors.expiryDate = 'Data de validade é obrigatória';\n    } else if (!/^\\d{2}\\/\\d{2}$/.test(paymentData.expiryDate)) {\n      newErrors.expiryDate = 'Formato: MM/AA';\n    }\n\n    if (!paymentData.cvv) {\n      newErrors.cvv = 'CVV é obrigatório';\n    } else if (paymentData.cvv.length !== 3) {\n      newErrors.cvv = 'CVV deve ter 3 dígitos';\n    }\n\n    if (!paymentData.cardName.trim()) {\n      newErrors.cardName = 'Nome no cartão é obrigatório';\n    }\n\n    if (!paymentData.cpf) {\n      newErrors.cpf = 'CPF é obrigatório';\n    } else if (!/^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/.test(paymentData.cpf)) {\n      newErrors.cpf = 'Formato: 000.000.000-00';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleInputChange = (field: keyof PaymentData, value: string) => {\n    let formattedValue = value;\n\n    if (field === 'cardNumber') {\n      formattedValue = formatCardNumber(value);\n      if (formattedValue.replace(/\\s/g, '').length > 16) return;\n    } else if (field === 'expiryDate') {\n      formattedValue = formatExpiryDate(value);\n      if (formattedValue.replace(/\\D/g, '').length > 4) return;\n    } else if (field === 'cvv') {\n      formattedValue = value.replace(/\\D/g, '');\n      if (formattedValue.length > 3) return;\n    } else if (field === 'cpf') {\n      formattedValue = formatCPF(value);\n      if (formattedValue.replace(/\\D/g, '').length > 11) return;\n    }\n\n    setPaymentData(prev => ({ ...prev, [field]: formattedValue }));\n    \n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsProcessing(true);\n\n    try {\n      // Simular processamento do pagamento\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      \n      setShowSuccess(true);\n      \n      // Após 2 segundos, chamar onPaymentSuccess\n      setTimeout(() => {\n        onPaymentSuccess();\n      }, 2000);\n    } catch (error) {\n      setErrors({ general: 'Erro ao processar pagamento. Tente novamente.' });\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  if (showSuccess) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-emerald-100 dark:from-green-950 dark:to-emerald-950 flex items-center justify-center p-4\">\n        <Card className=\"w-full max-w-md shadow-xl border-green-100 dark:border-green-800\">\n          <CardHeader className=\"text-center\">\n            <div className=\"mx-auto w-16 h-16 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mb-4\">\n              <Check className=\"w-8 h-8 text-green-600\" />\n            </div>\n            <CardTitle className=\"text-green-900 dark:text-green-100\">\n              Pagamento aprovado!\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"text-center space-y-4\">\n            <p className=\"text-green-700 dark:text-green-300\">\n              Seu plano <strong>{plan.name}</strong> foi ativado com sucesso!\n            </p>\n            <div className=\"bg-green-50 dark:bg-green-900 p-4 rounded-lg\">\n              <p className=\"text-sm text-green-600 dark:text-green-400\">\n                Você já pode aproveitar todos os recursos da IA.\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-blue-950 dark:to-indigo-950 p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Plan Summary */}\n          <div className=\"space-y-6\">\n            <Button\n              variant=\"ghost\"\n              onClick={onBack}\n              className=\"mb-4 text-blue-600 hover:text-blue-700\"\n            >\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Voltar aos planos\n            </Button>\n\n            <Card className=\"shadow-xl border-blue-100 dark:border-blue-800\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-3 text-blue-900 dark:text-blue-100\">\n                  <div className={`p-3 bg-gradient-to-r ${plan.color} rounded-full text-white`}>\n                    {plan.icon}\n                  </div>\n                  Resumo do pedido\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-blue-800 dark:text-blue-200\">Plano selecionado:</span>\n                  <Badge className={`bg-gradient-to-r ${plan.color} text-white`}>\n                    {plan.name}\n                  </Badge>\n                </div>\n                \n                <div className=\"flex items-center justify-between text-lg font-semibold\">\n                  <span className=\"text-blue-800 dark:text-blue-200\">Valor mensal:</span>\n                  <span className=\"text-blue-900 dark:text-blue-100\">\n                    R$ {plan.price.toFixed(2).replace('.', ',')}\n                  </span>\n                </div>\n\n                <div className=\"border-t pt-4\">\n                  <div className=\"flex items-center justify-between text-xl font-bold\">\n                    <span className=\"text-blue-900 dark:text-blue-100\">Total:</span>\n                    <span className=\"text-blue-900 dark:text-blue-100\">\n                      R$ {plan.price.toFixed(2).replace('.', ',')}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"bg-blue-50 dark:bg-blue-900 p-4 rounded-lg\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Calendar className=\"w-4 h-4 text-blue-600\" />\n                    <span className=\"text-sm font-semibold text-blue-800 dark:text-blue-200\">\n                      Cobrança recorrente\n                    </span>\n                  </div>\n                  <p className=\"text-xs text-blue-600 dark:text-blue-400\">\n                    Renovação automática todo mês. Cancele quando quiser.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Payment Form */}\n          <Card className=\"shadow-xl border-blue-100 dark:border-blue-800\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2 text-blue-900 dark:text-blue-100\">\n                <CreditCard className=\"w-5 h-5\" />\n                Dados do pagamento\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"cardNumber\" className=\"text-blue-800 dark:text-blue-200\">\n                    Número do cartão\n                  </Label>\n                  <Input\n                    id=\"cardNumber\"\n                    type=\"text\"\n                    value={paymentData.cardNumber}\n                    onChange={(e) => handleInputChange('cardNumber', e.target.value)}\n                    placeholder=\"0000 0000 0000 0000\"\n                    className={`border-blue-200 dark:border-blue-700 focus:ring-blue-500 ${\n                      errors.cardNumber ? 'border-red-500' : ''\n                    }`}\n                  />\n                  {errors.cardNumber && (\n                    <p className=\"text-red-500 text-sm\">{errors.cardNumber}</p>\n                  )}\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"expiryDate\" className=\"text-blue-800 dark:text-blue-200\">\n                      Validade\n                    </Label>\n                    <Input\n                      id=\"expiryDate\"\n                      type=\"text\"\n                      value={paymentData.expiryDate}\n                      onChange={(e) => handleInputChange('expiryDate', e.target.value)}\n                      placeholder=\"MM/AA\"\n                      className={`border-blue-200 dark:border-blue-700 focus:ring-blue-500 ${\n                        errors.expiryDate ? 'border-red-500' : ''\n                      }`}\n                    />\n                    {errors.expiryDate && (\n                      <p className=\"text-red-500 text-sm\">{errors.expiryDate}</p>\n                    )}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"cvv\" className=\"text-blue-800 dark:text-blue-200\">\n                      CVV\n                    </Label>\n                    <Input\n                      id=\"cvv\"\n                      type=\"text\"\n                      value={paymentData.cvv}\n                      onChange={(e) => handleInputChange('cvv', e.target.value)}\n                      placeholder=\"000\"\n                      className={`border-blue-200 dark:border-blue-700 focus:ring-blue-500 ${\n                        errors.cvv ? 'border-red-500' : ''\n                      }`}\n                    />\n                    {errors.cvv && (\n                      <p className=\"text-red-500 text-sm\">{errors.cvv}</p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"cardName\" className=\"text-blue-800 dark:text-blue-200\">\n                    Nome no cartão\n                  </Label>\n                  <Input\n                    id=\"cardName\"\n                    type=\"text\"\n                    value={paymentData.cardName}\n                    onChange={(e) => handleInputChange('cardName', e.target.value)}\n                    placeholder=\"Nome como está no cartão\"\n                    className={`border-blue-200 dark:border-blue-700 focus:ring-blue-500 ${\n                      errors.cardName ? 'border-red-500' : ''\n                    }`}\n                  />\n                  {errors.cardName && (\n                    <p className=\"text-red-500 text-sm\">{errors.cardName}</p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"cpf\" className=\"text-blue-800 dark:text-blue-200\">\n                    CPF do titular\n                  </Label>\n                  <Input\n                    id=\"cpf\"\n                    type=\"text\"\n                    value={paymentData.cpf}\n                    onChange={(e) => handleInputChange('cpf', e.target.value)}\n                    placeholder=\"000.000.000-00\"\n                    className={`border-blue-200 dark:border-blue-700 focus:ring-blue-500 ${\n                      errors.cpf ? 'border-red-500' : ''\n                    }`}\n                  />\n                  {errors.cpf && (\n                    <p className=\"text-red-500 text-sm\">{errors.cpf}</p>\n                  )}\n                </div>\n\n                {errors.general && (\n                  <div className=\"text-red-600 text-sm text-center bg-red-50 dark:bg-red-950 p-2 rounded\">\n                    {errors.general}\n                  </div>\n                )}\n\n                <div className=\"bg-green-50 dark:bg-green-900 p-4 rounded-lg\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Shield className=\"w-4 h-4 text-green-600\" />\n                    <span className=\"text-sm font-semibold text-green-800 dark:text-green-200\">\n                      Pagamento seguro\n                    </span>\n                  </div>\n                  <p className=\"text-xs text-green-600 dark:text-green-400\">\n                    Seus dados são protegidos com criptografia SSL de 256 bits.\n                  </p>\n                </div>\n\n                <Button \n                  type=\"submit\" \n                  className={`w-full bg-gradient-to-r ${plan.color} hover:opacity-90 text-white text-lg py-6`}\n                  disabled={isProcessing}\n                >\n                  {isProcessing ? (\n                    <>\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      Processando pagamento...\n                    </>\n                  ) : (\n                    <>\n                      <Lock className=\"w-4 h-4 mr-2\" />\n                      Finalizar pagamento - R$ {plan.price.toFixed(2).replace('.', ',')}\n                    </>\n                  )}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3359, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/UserDashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { useCurrentUser, useUsers, useDietPlans, useWorkoutPlans, useBodyAnalyses, useWorkoutProgress } from '@/lib/hooks';\nimport { UserProfile, FoodEntry, WorkoutProgress, MealEntry } from '@/lib/types';\nimport { generateDietPlan, generateWorkoutPlan } from '@/lib/fitness-utils';\nimport { canAccessAI, hasActiveSubscription } from '@/lib/subscription-utils';\nimport { SubscriptionRequired } from './SubscriptionRequired';\nimport { SubscriptionPlans } from './SubscriptionPlans';\nimport { PaymentScreen } from './PaymentScreen';\nimport { \n  User, \n  LogOut, \n  Camera, \n  Utensils, \n  Dumbbell, \n  Target, \n  Plus, \n  Trash2,\n  Clock,\n  Scale,\n  Activity,\n  Heart,\n  Droplets,\n  TrendingUp,\n  CheckCircle,\n  Upload,\n  FileText,\n  Image as ImageIcon,\n  Loader2,\n  Play,\n  Info,\n  Calendar,\n  Weight,\n  Check,\n  Save,\n  AlertCircle\n} from 'lucide-react';\n\nexport function UserDashboard() {\n  const { currentUser, logout, updateCurrentUser } = useCurrentUser();\n  const { updateUser } = useUsers();\n  const { addDietPlan, getDietPlanByUserId } = useDietPlans();\n  const { addWorkoutPlan, getWorkoutPlanByUserId } = useWorkoutPlans();\n  const { addBodyAnalysis, getBodyAnalysisByUserId } = useBodyAnalyses();\n  const { \n    addWorkoutProgress, \n    getWorkoutProgressByUserId, \n    getWorkoutProgressByDate, \n    updateWorkoutProgress \n  } = useWorkoutProgress();\n\n  const [activeTab, setActiveTab] = useState('profile');\n  const [resultsTab, setResultsTab] = useState('diet');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isAnalyzingDiet, setIsAnalyzingDiet] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  \n  // Estados para sistema de assinatura\n  const [showSubscriptionPlans, setShowSubscriptionPlans] = useState(false);\n  const [showPayment, setShowPayment] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState<'starter' | 'standard' | 'premium' | null>(null);\n  const [subscriptionFeature, setSubscriptionFeature] = useState('');\n  \n  // Estados do perfil\n  const [profile, setProfile] = useState<Partial<UserProfile>>({\n    age: 0,\n    gender: 'masculino',\n    height: 0,\n    weight: 0,\n    activityLevel: 'moderado',\n    goal: 'manter-peso-perder-gordura',\n    preferredMuscleGroups: []\n  });\n\n  // Estados da alimentação - NOVO SISTEMA\n  const [dietStep, setDietStep] = useState<'question' | 'input' | 'review'>('question');\n  const [followsDiet, setFollowsDiet] = useState<boolean | null>(null);\n  const [currentMeals, setCurrentMeals] = useState<MealEntry[]>([]);\n  const [newMeal, setNewMeal] = useState<MealEntry>({\n    name: '',\n    time: '',\n    foods: []\n  });\n  const [newFood, setNewFood] = useState<FoodEntry>({\n    food: '',\n    quantity: '',\n    measurement: 'gramas'\n  });\n\n  // Estados das fotos\n  const [photos, setPhotos] = useState({\n    front: '',\n    back: '',\n    left: '',\n    right: ''\n  });\n\n  // Estados do treino\n  const [selectedWorkoutDay, setSelectedWorkoutDay] = useState('');\n  const [workoutProgressData, setWorkoutProgressData] = useState<WorkoutProgress | null>(null);\n\n  // Carregar dados existentes\n  useEffect(() => {\n    if (currentUser?.profile) {\n      setProfile(currentUser.profile);\n    }\n  }, [currentUser]);\n\n  // Carregar progresso do treino para a data selecionada\n  useEffect(() => {\n    if (currentUser && selectedDate && selectedWorkoutDay) {\n      const progress = getWorkoutProgressByDate(currentUser.id, selectedDate);\n      if (progress && progress.workoutDay === selectedWorkoutDay) {\n        setWorkoutProgressData(progress);\n      } else {\n        setWorkoutProgressData(null);\n      }\n    }\n  }, [currentUser, selectedDate, selectedWorkoutDay, getWorkoutProgressByDate]);\n\n  const handleProfileSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (currentUser) {\n      const updatedUser = {\n        ...currentUser,\n        profile: profile as UserProfile\n      };\n      updateCurrentUser(updatedUser);\n      updateUser(currentUser.id, updatedUser);\n      setActiveTab('dashboard');\n    }\n  };\n\n  // NOVO SISTEMA DE DIETA\n  const handleDietQuestion = (follows: boolean) => {\n    setFollowsDiet(follows);\n    setDietStep('input');\n  };\n\n  const addFoodToMeal = () => {\n    if (!newFood.food.trim() || !newFood.quantity.trim()) {\n      alert('Por favor, preencha o alimento e a quantidade');\n      return;\n    }\n\n    // Criar uma cópia profunda do alimento para evitar referências compartilhadas\n    const foodToAdd = {\n      food: newFood.food.trim(),\n      quantity: newFood.quantity.trim(),\n      measurement: newFood.measurement\n    };\n\n    setNewMeal(prev => ({\n      ...prev,\n      foods: [...prev.foods, foodToAdd]\n    }));\n\n    // Limpar o formulário de alimento\n    setNewFood({\n      food: '',\n      quantity: '',\n      measurement: 'gramas'\n    });\n  };\n\n  const removeFoodFromMeal = (index: number) => {\n    setNewMeal(prev => ({\n      ...prev,\n      foods: prev.foods.filter((_, i) => i !== index)\n    }));\n  };\n\n  const addMealToList = () => {\n    if (!newMeal.name.trim() || !newMeal.time || newMeal.foods.length === 0) {\n      alert('Por favor, preencha o nome da refeição, horário e adicione pelo menos um alimento');\n      return;\n    }\n\n    // Criar uma cópia profunda da refeição para evitar referências compartilhadas\n    const mealToAdd = {\n      name: newMeal.name.trim(),\n      time: newMeal.time,\n      foods: newMeal.foods.map(food => ({\n        food: food.food,\n        quantity: food.quantity,\n        measurement: food.measurement\n      }))\n    };\n\n    // Adicionar a refeição à lista\n    setCurrentMeals(prev => [...prev, mealToAdd]);\n    \n    // Limpar completamente o formulário\n    setNewMeal({\n      name: '',\n      time: '',\n      foods: []\n    });\n    \n    // Limpar também o campo de novo alimento\n    setNewFood({\n      food: '',\n      quantity: '',\n      measurement: 'gramas'\n    });\n  };\n\n  const removeMealFromList = (index: number) => {\n    setCurrentMeals(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const handlePhotoUpload = (position: keyof typeof photos, file: File) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      setPhotos(prev => ({\n        ...prev,\n        [position]: e.target?.result as string\n      }));\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // Nova função para analisar PDF/imagem da dieta\n  const analyzeDietFromFile = async (file: File) => {\n    setIsAnalyzingDiet(true);\n    \n    try {\n      // Simular análise de IA (em produção, seria uma chamada para API de OCR/Vision)\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      \n      // Dados simulados extraídos do arquivo\n      const extractedMeals: MealEntry[] = [\n        {\n          name: 'Café da manhã',\n          time: '07:00',\n          foods: [\n            { food: 'Leite semidesnatado', quantity: '250', measurement: 'ml' },\n            { food: 'Torrada integral', quantity: '2', measurement: 'unidade' },\n            { food: 'Whey protein', quantity: '30', measurement: 'gramas' }\n          ]\n        },\n        {\n          name: 'Lanche da manhã',\n          time: '10:00',\n          foods: [\n            { food: 'Banana', quantity: '1', measurement: 'unidade' },\n            { food: 'Castanha do Pará', quantity: '5', measurement: 'unidade' }\n          ]\n        },\n        {\n          name: 'Almoço',\n          time: '12:30',\n          foods: [\n            { food: 'Peito de frango grelhado', quantity: '150', measurement: 'gramas' },\n            { food: 'Arroz integral', quantity: '100', measurement: 'gramas' },\n            { food: 'Brócolis refogado', quantity: '100', measurement: 'gramas' },\n            { food: 'Azeite extra virgem', quantity: '1', measurement: 'colher-sopa' }\n          ]\n        }\n      ];\n      \n      // Adicionar as refeições extraídas\n      setCurrentMeals(prev => [...prev, ...extractedMeals]);\n      \n      alert(`✅ Análise concluída! ${extractedMeals.length} refeições foram extraídas e adicionadas. Você pode editar ou remover qualquer item se necessário.`);\n      \n    } catch (error) {\n      console.error('Erro ao analisar arquivo:', error);\n      alert('❌ Erro ao analisar o arquivo. Tente novamente ou adicione as refeições manualmente.');\n    } finally {\n      setIsAnalyzingDiet(false);\n    }\n  };\n\n  const handleDietFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    \n    const validTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/jpg'];\n    if (!validTypes.includes(file.type)) {\n      alert('Por favor, selecione um arquivo PDF ou imagem (JPG, PNG)');\n      return;\n    }\n    \n    if (file.size > 10 * 1024 * 1024) { // 10MB\n      alert('Arquivo muito grande. Máximo 10MB.');\n      return;\n    }\n    \n    analyzeDietFromFile(file);\n  };\n\n  // Função para buscar vídeo do exercício\n  const getExerciseVideo = async (exerciseName: string) => {\n    try {\n      // Simular busca de vídeo (em produção, usaria YouTube API)\n      const videoId = 'dQw4w9WgXcQ'; // ID de exemplo\n      return `https://www.youtube.com/watch?v=${videoId}`;\n    } catch (error) {\n      console.error('Erro ao buscar vídeo:', error);\n      return null;\n    }\n  };\n\n  // Função para inicializar progresso do treino\n  const initializeWorkoutProgress = (workoutDay: string) => {\n    if (!currentUser || !currentWorkoutPlan) return;\n\n    const workout = currentWorkoutPlan.workouts.find(w => w.day === workoutDay);\n    if (!workout) return;\n\n    const newProgress: Omit<WorkoutProgress, 'createdAt'> = {\n      userId: currentUser.id,\n      workoutDay,\n      date: selectedDate,\n      exercises: workout.exercises.map(exercise => ({\n        exerciseName: exercise.name,\n        sets: Array.from({ length: exercise.sets }, () => ({\n          weight: 0,\n          reps: 0,\n          completed: false\n        }))\n      }))\n    };\n\n    const savedProgress = addWorkoutProgress(newProgress);\n    setWorkoutProgressData(savedProgress);\n  };\n\n  // Função para atualizar peso/reps de um exercício\n  const updateExerciseProgress = (exerciseIndex: number, setIndex: number, field: 'weight' | 'reps', value: number) => {\n    if (!workoutProgressData) return;\n\n    const updatedProgress = {\n      ...workoutProgressData,\n      exercises: workoutProgressData.exercises.map((exercise, eIndex) => \n        eIndex === exerciseIndex \n          ? {\n              ...exercise,\n              sets: exercise.sets.map((set, sIndex) => \n                sIndex === setIndex \n                  ? { ...set, [field]: value }\n                  : set\n              )\n            }\n          : exercise\n      )\n    };\n\n    setWorkoutProgressData(updatedProgress);\n    updateWorkoutProgress(\n      workoutProgressData.userId, \n      workoutProgressData.date, \n      workoutProgressData.workoutDay, \n      updatedProgress\n    );\n  };\n\n  // Função para marcar série como completa\n  const toggleSetCompletion = (exerciseIndex: number, setIndex: number) => {\n    if (!workoutProgressData) return;\n\n    const updatedProgress = {\n      ...workoutProgressData,\n      exercises: workoutProgressData.exercises.map((exercise, eIndex) => \n        eIndex === exerciseIndex \n          ? {\n              ...exercise,\n              sets: exercise.sets.map((set, sIndex) => \n                sIndex === setIndex \n                  ? { ...set, completed: !set.completed }\n                  : set\n              )\n            }\n          : exercise\n      )\n    };\n\n    setWorkoutProgressData(updatedProgress);\n    updateWorkoutProgress(\n      workoutProgressData.userId, \n      workoutProgressData.date, \n      workoutProgressData.workoutDay, \n      updatedProgress\n    );\n  };\n\n  // NOVA FUNÇÃO: Salvar treino completo\n  const saveCompleteWorkout = () => {\n    if (!workoutProgressData) return;\n\n    // Verificar se todas as séries foram completadas\n    const allSetsCompleted = workoutProgressData.exercises.every(exercise =>\n      exercise.sets.every(set => set.completed)\n    );\n\n    if (!allSetsCompleted) {\n      const confirmSave = confirm(\n        'Nem todas as séries foram marcadas como completas. Deseja salvar mesmo assim?'\n      );\n      if (!confirmSave) return;\n    }\n\n    // Salvar dados do treino (já está sendo salvo automaticamente)\n    alert(`✅ Treino de ${workoutProgressData.workoutDay} do dia ${selectedDate} foi salvo com sucesso!\\n\\nResumo:\\n${workoutProgressData.exercises.map(ex => \n      `• ${ex.exerciseName}: ${ex.sets.filter(s => s.completed).length}/${ex.sets.length} séries completas`\n    ).join('\\n')}`);\n  };\n\n  const generatePlans = async () => {\n    if (!currentUser?.profile || currentMeals.length === 0) {\n      alert('Por favor, complete seu perfil e adicione suas refeições antes de gerar os planos.');\n      return;\n    }\n\n    // Verificar se usuário tem assinatura ativa\n    if (!hasActiveSubscription(currentUser)) {\n      setSubscriptionFeature('Gerar planos de dieta e treino com IA');\n      setShowSubscriptionPlans(true);\n      return;\n    }\n\n    setIsGenerating(true);\n    \n    try {\n      // Gerar plano de dieta\n      const dietPlan = await generateDietPlan(currentUser.profile, currentMeals);\n      addDietPlan({\n        userId: currentUser.id,\n        ...dietPlan\n      });\n\n      // Gerar plano de treino\n      const workoutPlan = await generateWorkoutPlan(currentUser.profile);\n      addWorkoutPlan({\n        userId: currentUser.id,\n        ...workoutPlan\n      });\n\n      // Análise corporal com fotos\n      if (photos.front || photos.back || photos.left || photos.right) {\n        const bodyAnalysis = {\n          userId: currentUser.id,\n          photos,\n          analysis: 'Análise corporal baseada nas fotos fornecidas...',\n          recommendations: ['Recomendação 1', 'Recomendação 2'],\n          date: new Date().toISOString()\n        };\n        addBodyAnalysis(bodyAnalysis);\n      }\n\n      setActiveTab('results');\n      alert('✅ Planos gerados com sucesso!');\n    } catch (error) {\n      console.error('Erro ao gerar planos:', error);\n      alert('❌ Erro ao gerar planos. Tente novamente.');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Obter planos existentes\n  const currentDietPlan = currentUser ? getDietPlanByUserId(currentUser.id) : null;\n  const currentWorkoutPlan = currentUser ? getWorkoutPlanByUserId(currentUser.id) : null;\n  const currentBodyAnalysis = currentUser ? getBodyAnalysisByUserId(currentUser.id) : null;\n\n  // Função para lidar com seleção de plano\n  const handlePlanSelection = (plan: 'starter' | 'standard' | 'premium') => {\n    setSelectedPlan(plan);\n    setShowSubscriptionPlans(false);\n    setShowPayment(true);\n  };\n\n  // Função para lidar com pagamento bem-sucedido\n  const handlePaymentSuccess = () => {\n    setShowPayment(false);\n    setSelectedPlan(null);\n    setSubscriptionFeature('');\n    // Atualizar usuário com nova assinatura seria feito aqui\n    alert('✅ Pagamento realizado com sucesso! Agora você pode usar todas as funcionalidades.');\n  };\n\n  if (!currentUser) {\n    return <div>Carregando...</div>;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-8\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-12 h-12 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n              <User className=\"w-6 h-6 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">\n                Olá, {currentUser.name}!\n              </h1>\n              <p className=\"text-gray-600\">Bem-vindo ao seu dashboard</p>\n            </div>\n          </div>\n          <Button \n            onClick={logout}\n            variant=\"outline\"\n            className=\"flex items-center gap-2\"\n          >\n            <LogOut className=\"w-4 h-4\" />\n            Sair\n          </Button>\n        </div>\n\n        {/* Tabs Navigation */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-4 lg:w-auto lg:grid-cols-4\">\n            <TabsTrigger value=\"profile\" className=\"flex items-center gap-2\">\n              <User className=\"w-4 h-4\" />\n              Perfil\n            </TabsTrigger>\n            <TabsTrigger value=\"dashboard\" className=\"flex items-center gap-2\">\n              <Activity className=\"w-4 h-4\" />\n              Dashboard\n            </TabsTrigger>\n            <TabsTrigger value=\"workout\" className=\"flex items-center gap-2\">\n              <Dumbbell className=\"w-4 h-4\" />\n              Treino\n            </TabsTrigger>\n            <TabsTrigger value=\"results\" className=\"flex items-center gap-2\">\n              <Target className=\"w-4 h-4\" />\n              Resultados\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Profile Tab */}\n          <TabsContent value=\"profile\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <User className=\"w-5 h-5\" />\n                  Informações Pessoais\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleProfileSubmit} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <Label htmlFor=\"age\">Idade</Label>\n                      <Input\n                        id=\"age\"\n                        type=\"number\"\n                        value={profile.age || ''}\n                        onChange={(e) => setProfile(prev => ({ ...prev, age: parseInt(e.target.value) || 0 }))}\n                        required\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"gender\">Gênero</Label>\n                      <Select \n                        value={profile.gender} \n                        onValueChange={(value) => setProfile(prev => ({ ...prev, gender: value as 'masculino' | 'feminino' }))}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"masculino\">Masculino</SelectItem>\n                          <SelectItem value=\"feminino\">Feminino</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                    <div>\n                      <Label htmlFor=\"height\">Altura (cm)</Label>\n                      <Input\n                        id=\"height\"\n                        type=\"number\"\n                        value={profile.height || ''}\n                        onChange={(e) => setProfile(prev => ({ ...prev, height: parseInt(e.target.value) || 0 }))}\n                        required\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"weight\">Peso (kg)</Label>\n                      <Input\n                        id=\"weight\"\n                        type=\"number\"\n                        value={profile.weight || ''}\n                        onChange={(e) => setProfile(prev => ({ ...prev, weight: parseInt(e.target.value) || 0 }))}\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"activityLevel\">Nível de Atividade</Label>\n                    <Select \n                      value={profile.activityLevel} \n                      onValueChange={(value) => setProfile(prev => ({ ...prev, activityLevel: value as any }))}\n                    >\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"sedentario\">Sedentário</SelectItem>\n                        <SelectItem value=\"leve\">Leve</SelectItem>\n                        <SelectItem value=\"moderado\">Moderado</SelectItem>\n                        <SelectItem value=\"intenso\">Intenso</SelectItem>\n                        <SelectItem value=\"muito-intenso\">Muito Intenso</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"goal\">Objetivo</Label>\n                    <Select \n                      value={profile.goal} \n                      onValueChange={(value) => setProfile(prev => ({ ...prev, goal: value as any }))}\n                    >\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"perder-peso\">Perder Peso</SelectItem>\n                        <SelectItem value=\"ganhar-massa\">Ganhar Massa Muscular</SelectItem>\n                        <SelectItem value=\"manter-peso-perder-gordura\">Manter Peso e Perder Gordura</SelectItem>\n                        <SelectItem value=\"melhorar-condicionamento\">Melhorar Condicionamento</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <Button type=\"submit\" className=\"w-full\">\n                    Salvar Perfil\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Dashboard Tab */}\n          <TabsContent value=\"dashboard\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Alimentação */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Utensils className=\"w-5 h-5\" />\n                    Alimentação Atual\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {dietStep === 'question' && (\n                    <div className=\"text-center space-y-4\">\n                      <p className=\"text-gray-600\">Você segue alguma dieta específica atualmente?</p>\n                      <div className=\"flex gap-4 justify-center\">\n                        <Button onClick={() => handleDietQuestion(true)} variant=\"outline\">\n                          Sim, sigo uma dieta\n                        </Button>\n                        <Button onClick={() => handleDietQuestion(false)} variant=\"outline\">\n                          Não sigo dieta específica\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n\n                  {dietStep === 'input' && (\n                    <div className=\"space-y-4\">\n                      {followsDiet ? (\n                        <div className=\"space-y-4\">\n                          <p className=\"text-sm text-gray-600\">\n                            Você pode enviar uma foto ou PDF da sua dieta atual, ou adicionar manualmente:\n                          </p>\n                          \n                          <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4\">\n                            <div className=\"text-center space-y-2\">\n                              <Upload className=\"w-8 h-8 text-gray-400 mx-auto\" />\n                              <div>\n                                <label htmlFor=\"diet-file\" className=\"cursor-pointer text-blue-600 hover:text-blue-700\">\n                                  Clique para enviar arquivo\n                                </label>\n                                <input\n                                  id=\"diet-file\"\n                                  type=\"file\"\n                                  accept=\".pdf,.jpg,.jpeg,.png\"\n                                  onChange={handleDietFileUpload}\n                                  className=\"hidden\"\n                                />\n                              </div>\n                              <p className=\"text-xs text-gray-500\">PDF, JPG ou PNG (máx. 10MB)</p>\n                            </div>\n                          </div>\n\n                          {isAnalyzingDiet && (\n                            <div className=\"flex items-center justify-center gap-2 p-4 bg-blue-50 rounded-lg\">\n                              <Loader2 className=\"w-4 h-4 animate-spin\" />\n                              <span className=\"text-sm text-blue-700\">Analisando arquivo...</span>\n                            </div>\n                          )}\n\n                          <div className=\"text-center\">\n                            <span className=\"text-sm text-gray-500\">ou</span>\n                          </div>\n                        </div>\n                      ) : (\n                        <p className=\"text-sm text-gray-600\">\n                          Vamos registrar o que você costuma comer no dia a dia:\n                        </p>\n                      )}\n\n                      {/* Formulário para adicionar refeições */}\n                      <div className=\"space-y-4 border rounded-lg p-4 bg-gray-50\">\n                        <h4 className=\"font-medium flex items-center gap-2\">\n                          <Plus className=\"w-4 h-4\" />\n                          Adicionar Refeição\n                        </h4>\n                        \n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                          <div>\n                            <Label htmlFor=\"meal-name\">Nome da refeição</Label>\n                            <Input\n                              id=\"meal-name\"\n                              placeholder=\"Ex: Café da manhã\"\n                              value={newMeal.name}\n                              onChange={(e) => setNewMeal(prev => ({ ...prev, name: e.target.value }))}\n                            />\n                          </div>\n                          <div>\n                            <Label htmlFor=\"meal-time\">Horário</Label>\n                            <Input\n                              id=\"meal-time\"\n                              type=\"time\"\n                              value={newMeal.time}\n                              onChange={(e) => setNewMeal(prev => ({ ...prev, time: e.target.value }))}\n                            />\n                          </div>\n                        </div>\n\n                        {/* Adicionar alimentos à refeição */}\n                        <div className=\"space-y-3\">\n                          <Label>Alimentos</Label>\n                          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-2\">\n                            <Input\n                              placeholder=\"Alimento\"\n                              value={newFood.food}\n                              onChange={(e) => setNewFood(prev => ({ ...prev, food: e.target.value }))}\n                            />\n                            <Input\n                              placeholder=\"Quantidade\"\n                              value={newFood.quantity}\n                              onChange={(e) => setNewFood(prev => ({ ...prev, quantity: e.target.value }))}\n                            />\n                            <Select \n                              value={newFood.measurement} \n                              onValueChange={(value) => setNewFood(prev => ({ ...prev, measurement: value }))}\n                            >\n                              <SelectTrigger>\n                                <SelectValue />\n                              </SelectTrigger>\n                              <SelectContent>\n                                <SelectItem value=\"gramas\">gramas</SelectItem>\n                                <SelectItem value=\"ml\">ml</SelectItem>\n                                <SelectItem value=\"unidade\">unidade</SelectItem>\n                                <SelectItem value=\"colher-sopa\">colher de sopa</SelectItem>\n                                <SelectItem value=\"colher-cha\">colher de chá</SelectItem>\n                                <SelectItem value=\"xicara\">xícara</SelectItem>\n                              </SelectContent>\n                            </Select>\n                            <Button onClick={addFoodToMeal} size=\"sm\">\n                              <Plus className=\"w-4 h-4\" />\n                            </Button>\n                          </div>\n\n                          {/* Lista de alimentos da refeição atual */}\n                          {newMeal.foods.length > 0 && (\n                            <div className=\"space-y-2\">\n                              <p className=\"text-sm font-medium\">Alimentos nesta refeição:</p>\n                              {newMeal.foods.map((food, index) => (\n                                <div key={index} className=\"flex items-center justify-between bg-white p-2 rounded border\">\n                                  <span className=\"text-sm\">\n                                    {food.food} - {food.quantity} {food.measurement}\n                                  </span>\n                                  <Button\n                                    onClick={() => removeFoodFromMeal(index)}\n                                    size=\"sm\"\n                                    variant=\"ghost\"\n                                  >\n                                    <Trash2 className=\"w-4 h-4\" />\n                                  </Button>\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n\n                        <Button onClick={addMealToList} className=\"w-full\">\n                          Adicionar Refeição\n                        </Button>\n                      </div>\n\n                      {/* Lista de refeições adicionadas */}\n                      {currentMeals.length > 0 && (\n                        <div className=\"space-y-3\">\n                          <h4 className=\"font-medium\">Refeições Registradas ({currentMeals.length})</h4>\n                          {currentMeals.map((meal, index) => (\n                            <div key={index} className=\"border rounded-lg p-3 bg-white\">\n                              <div className=\"flex items-center justify-between mb-2\">\n                                <div className=\"flex items-center gap-2\">\n                                  <Clock className=\"w-4 h-4 text-gray-500\" />\n                                  <span className=\"font-medium\">{meal.name}</span>\n                                  <Badge variant=\"outline\">{meal.time}</Badge>\n                                </div>\n                                <Button\n                                  onClick={() => removeMealFromList(index)}\n                                  size=\"sm\"\n                                  variant=\"ghost\"\n                                >\n                                  <Trash2 className=\"w-4 h-4\" />\n                                </Button>\n                              </div>\n                              <div className=\"text-sm text-gray-600\">\n                                {meal.foods.map((food, foodIndex) => (\n                                  <span key={foodIndex}>\n                                    {food.food} ({food.quantity} {food.measurement})\n                                    {foodIndex < meal.foods.length - 1 ? ', ' : ''}\n                                  </span>\n                                ))}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      )}\n\n                      {currentMeals.length > 0 && (\n                        <Button \n                          onClick={() => setDietStep('review')} \n                          className=\"w-full\"\n                        >\n                          Continuar\n                        </Button>\n                      )}\n                    </div>\n                  )}\n\n                  {dietStep === 'review' && (\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center gap-2 text-green-600\">\n                        <CheckCircle className=\"w-5 h-5\" />\n                        <span className=\"font-medium\">Alimentação registrada!</span>\n                      </div>\n                      <p className=\"text-sm text-gray-600\">\n                        {currentMeals.length} refeições foram registradas. Agora você pode adicionar suas fotos e gerar seus planos personalizados.\n                      </p>\n                      <Button \n                        onClick={() => setDietStep('input')} \n                        variant=\"outline\" \n                        size=\"sm\"\n                      >\n                        Editar refeições\n                      </Button>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n\n              {/* Fotos */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Camera className=\"w-5 h-5\" />\n                    Fotos Corporais\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    {(['front', 'back', 'left', 'right'] as const).map((position) => (\n                      <div key={position} className=\"space-y-2\">\n                        <Label className=\"capitalize\">\n                          {position === 'front' ? 'Frente' : \n                           position === 'back' ? 'Costas' : \n                           position === 'left' ? 'Lado Esquerdo' : 'Lado Direito'}\n                        </Label>\n                        <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center\">\n                          {photos[position] ? (\n                            <div className=\"space-y-2\">\n                              <img \n                                src={photos[position]} \n                                alt={position}\n                                className=\"w-full h-32 object-cover rounded\"\n                              />\n                              <Button\n                                onClick={() => setPhotos(prev => ({ ...prev, [position]: '' }))}\n                                size=\"sm\"\n                                variant=\"outline\"\n                              >\n                                Remover\n                              </Button>\n                            </div>\n                          ) : (\n                            <div>\n                              <ImageIcon className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\n                              <label htmlFor={`photo-${position}`} className=\"cursor-pointer text-blue-600 hover:text-blue-700 text-sm\">\n                                Adicionar foto\n                              </label>\n                              <input\n                                id={`photo-${position}`}\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={(e) => {\n                                  const file = e.target.files?.[0];\n                                  if (file) handlePhotoUpload(position, file);\n                                }}\n                                className=\"hidden\"\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Botão para gerar planos */}\n            <div className=\"mt-6\">\n              <Card>\n                <CardContent className=\"pt-6\">\n                  <div className=\"text-center space-y-4\">\n                    <div className=\"flex items-center justify-center gap-2\">\n                      <Target className=\"w-6 h-6 text-blue-600\" />\n                      <h3 className=\"text-lg font-semibold\">Gerar Planos Personalizados</h3>\n                    </div>\n                    <p className=\"text-gray-600\">\n                      Com base no seu perfil, alimentação atual e fotos, nossa IA criará planos personalizados de dieta e treino.\n                    </p>\n                    <Button \n                      onClick={generatePlans}\n                      disabled={isGenerating || !currentUser?.profile || currentMeals.length === 0}\n                      className=\"w-full max-w-md\"\n                    >\n                      {isGenerating ? (\n                        <>\n                          <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                          Gerando planos...\n                        </>\n                      ) : (\n                        <>\n                          <Target className=\"w-4 h-4 mr-2\" />\n                          Gerar Meus Planos\n                        </>\n                      )}\n                    </Button>\n                    {(!currentUser?.profile || currentMeals.length === 0) && (\n                      <p className=\"text-sm text-amber-600\">\n                        Complete seu perfil e adicione suas refeições para continuar\n                      </p>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Workout Tab */}\n          <TabsContent value=\"workout\">\n            <div className=\"space-y-6\">\n              {currentWorkoutPlan ? (\n                <>\n                  {/* Seletor de data e treino */}\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Calendar className=\"w-5 h-5\" />\n                        Registrar Treino\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div>\n                          <Label htmlFor=\"workout-date\">Data do Treino</Label>\n                          <Input\n                            id=\"workout-date\"\n                            type=\"date\"\n                            value={selectedDate}\n                            onChange={(e) => setSelectedDate(e.target.value)}\n                          />\n                        </div>\n                        <div>\n                          <Label htmlFor=\"workout-day\">Treino</Label>\n                          <Select value={selectedWorkoutDay} onValueChange={setSelectedWorkoutDay}>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Selecione o treino\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {currentWorkoutPlan.workouts.map((workout) => (\n                                <SelectItem key={workout.day} value={workout.day}>\n                                  {workout.day} - {workout.focus}\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </div>\n                      </div>\n\n                      {selectedWorkoutDay && !workoutProgressData && (\n                        <Button \n                          onClick={() => initializeWorkoutProgress(selectedWorkoutDay)}\n                          className=\"w-full\"\n                        >\n                          Iniciar Treino de {selectedWorkoutDay}\n                        </Button>\n                      )}\n                    </CardContent>\n                  </Card>\n\n                  {/* Progresso do treino */}\n                  {workoutProgressData && (\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center gap-2\">\n                            <Dumbbell className=\"w-5 h-5\" />\n                            Treino de {workoutProgressData.workoutDay}\n                          </div>\n                          <Badge variant=\"outline\">\n                            {selectedDate}\n                          </Badge>\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-6\">\n                        {workoutProgressData.exercises.map((exercise, exerciseIndex) => (\n                          <div key={exerciseIndex} className=\"space-y-4 border rounded-lg p-4\">\n                            <div className=\"flex items-center justify-between\">\n                              <h4 className=\"font-medium\">{exercise.exerciseName}</h4>\n                              <Button\n                                onClick={() => getExerciseVideo(exercise.exerciseName)}\n                                size=\"sm\"\n                                variant=\"outline\"\n                              >\n                                <Play className=\"w-4 h-4 mr-1\" />\n                                Vídeo\n                              </Button>\n                            </div>\n                            \n                            <div className=\"space-y-2\">\n                              {exercise.sets.map((set, setIndex) => (\n                                <div key={setIndex} className=\"grid grid-cols-4 gap-2 items-center\">\n                                  <div className=\"text-sm font-medium\">\n                                    Série {setIndex + 1}\n                                  </div>\n                                  <div>\n                                    <Input\n                                      type=\"number\"\n                                      placeholder=\"Peso (kg)\"\n                                      value={set.weight || ''}\n                                      onChange={(e) => updateExerciseProgress(\n                                        exerciseIndex, \n                                        setIndex, \n                                        'weight', \n                                        parseFloat(e.target.value) || 0\n                                      )}\n                                    />\n                                  </div>\n                                  <div>\n                                    <Input\n                                      type=\"number\"\n                                      placeholder=\"Reps\"\n                                      value={set.reps || ''}\n                                      onChange={(e) => updateExerciseProgress(\n                                        exerciseIndex, \n                                        setIndex, \n                                        'reps', \n                                        parseInt(e.target.value) || 0\n                                      )}\n                                    />\n                                  </div>\n                                  <div className=\"flex justify-center\">\n                                    <Checkbox\n                                      checked={set.completed}\n                                      onCheckedChange={() => toggleSetCompletion(exerciseIndex, setIndex)}\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        ))}\n\n                        <Button onClick={saveCompleteWorkout} className=\"w-full\">\n                          <Save className=\"w-4 h-4 mr-2\" />\n                          Salvar Treino\n                        </Button>\n                      </CardContent>\n                    </Card>\n                  )}\n                </>\n              ) : (\n                <Card>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"text-center space-y-4\">\n                      <Dumbbell className=\"w-12 h-12 text-gray-400 mx-auto\" />\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-gray-900\">Nenhum plano de treino</h3>\n                        <p className=\"text-gray-600\">\n                          Gere seu plano personalizado na aba Dashboard\n                        </p>\n                      </div>\n                      <Button onClick={() => setActiveTab('dashboard')}>\n                        Ir para Dashboard\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          </TabsContent>\n\n          {/* Results Tab */}\n          <TabsContent value=\"results\">\n            <div className=\"space-y-6\">\n              <Tabs value={resultsTab} onValueChange={setResultsTab}>\n                <TabsList className=\"grid w-full grid-cols-3\">\n                  <TabsTrigger value=\"diet\">Dieta</TabsTrigger>\n                  <TabsTrigger value=\"workout\">Treino</TabsTrigger>\n                  <TabsTrigger value=\"analysis\">Análise</TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"diet\">\n                  {currentDietPlan ? (\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\">\n                          <Utensils className=\"w-5 h-5\" />\n                          Seu Plano de Dieta\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n                          <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                            <div className=\"text-2xl font-bold text-blue-600\">\n                              {currentDietPlan.dailyCalories}\n                            </div>\n                            <div className=\"text-sm text-gray-600\">Calorias/dia</div>\n                          </div>\n                          <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                            <div className=\"text-2xl font-bold text-green-600\">\n                              {currentDietPlan.macros.protein}g\n                            </div>\n                            <div className=\"text-sm text-gray-600\">Proteína</div>\n                          </div>\n                          <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n                            <div className=\"text-2xl font-bold text-orange-600\">\n                              {currentDietPlan.macros.carbs}g\n                            </div>\n                            <div className=\"text-sm text-gray-600\">Carboidratos</div>\n                          </div>\n                        </div>\n\n                        <div className=\"space-y-4\">\n                          {currentDietPlan.meals.map((meal, index) => (\n                            <div key={index} className=\"border rounded-lg p-4\">\n                              <div className=\"flex items-center gap-2 mb-3\">\n                                <Clock className=\"w-4 h-4 text-gray-500\" />\n                                <h4 className=\"font-medium\">{meal.name}</h4>\n                                <Badge variant=\"outline\">{meal.time}</Badge>\n                              </div>\n                              <div className=\"space-y-2\">\n                                {meal.foods.map((food, foodIndex) => (\n                                  <div key={foodIndex} className=\"flex justify-between items-center text-sm\">\n                                    <span>{food.food}</span>\n                                    <span className=\"text-gray-500\">\n                                      {food.quantity} {food.measurement}\n                                    </span>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ) : (\n                    <Card>\n                      <CardContent className=\"pt-6\">\n                        <div className=\"text-center space-y-4\">\n                          <Utensils className=\"w-12 h-12 text-gray-400 mx-auto\" />\n                          <div>\n                            <h3 className=\"text-lg font-semibold text-gray-900\">Nenhum plano de dieta</h3>\n                            <p className=\"text-gray-600\">\n                              Gere seu plano personalizado na aba Dashboard\n                            </p>\n                          </div>\n                          <Button onClick={() => setActiveTab('dashboard')}>\n                            Ir para Dashboard\n                          </Button>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  )}\n                </TabsContent>\n\n                <TabsContent value=\"workout\">\n                  {currentWorkoutPlan ? (\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\">\n                          <Dumbbell className=\"w-5 h-5\" />\n                          Seu Plano de Treino\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        {currentWorkoutPlan.workouts.map((workout, index) => (\n                          <div key={index} className=\"border rounded-lg p-4\">\n                            <div className=\"flex items-center gap-2 mb-3\">\n                              <Target className=\"w-4 h-4 text-gray-500\" />\n                              <h4 className=\"font-medium\">{workout.day}</h4>\n                              <Badge variant=\"outline\">{workout.focus}</Badge>\n                            </div>\n                            <div className=\"space-y-2\">\n                              {workout.exercises.map((exercise, exerciseIndex) => (\n                                <div key={exerciseIndex} className=\"flex justify-between items-center text-sm\">\n                                  <span>{exercise.name}</span>\n                                  <span className=\"text-gray-500\">\n                                    {exercise.sets} séries × {exercise.reps} reps\n                                  </span>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        ))}\n                      </CardContent>\n                    </Card>\n                  ) : (\n                    <Card>\n                      <CardContent className=\"pt-6\">\n                        <div className=\"text-center space-y-4\">\n                          <Dumbbell className=\"w-12 h-12 text-gray-400 mx-auto\" />\n                          <div>\n                            <h3 className=\"text-lg font-semibold text-gray-900\">Nenhum plano de treino</h3>\n                            <p className=\"text-gray-600\">\n                              Gere seu plano personalizado na aba Dashboard\n                            </p>\n                          </div>\n                          <Button onClick={() => setActiveTab('dashboard')}>\n                            Ir para Dashboard\n                          </Button>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  )}\n                </TabsContent>\n\n                <TabsContent value=\"analysis\">\n                  {currentBodyAnalysis ? (\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\">\n                          <Activity className=\"w-5 h-5\" />\n                          Análise Corporal\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n                          {Object.entries(currentBodyAnalysis.photos).map(([position, photo]) => (\n                            photo && (\n                              <div key={position} className=\"space-y-2\">\n                                <img \n                                  src={photo} \n                                  alt={position}\n                                  className=\"w-full h-32 object-cover rounded\"\n                                />\n                                <p className=\"text-xs text-center text-gray-500 capitalize\">\n                                  {position === 'front' ? 'Frente' : \n                                   position === 'back' ? 'Costas' : \n                                   position === 'left' ? 'Lado Esquerdo' : 'Lado Direito'}\n                                </p>\n                              </div>\n                            )\n                          ))}\n                        </div>\n\n                        <div className=\"space-y-4\">\n                          <div>\n                            <h4 className=\"font-medium mb-2\">Análise</h4>\n                            <p className=\"text-gray-600\">{currentBodyAnalysis.analysis}</p>\n                          </div>\n\n                          <div>\n                            <h4 className=\"font-medium mb-2\">Recomendações</h4>\n                            <ul className=\"space-y-1\">\n                              {currentBodyAnalysis.recommendations.map((rec, index) => (\n                                <li key={index} className=\"flex items-start gap-2 text-gray-600\">\n                                  <CheckCircle className=\"w-4 h-4 text-green-500 mt-0.5 flex-shrink-0\" />\n                                  {rec}\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  ) : (\n                    <Card>\n                      <CardContent className=\"pt-6\">\n                        <div className=\"text-center space-y-4\">\n                          <Activity className=\"w-12 h-12 text-gray-400 mx-auto\" />\n                          <div>\n                            <h3 className=\"text-lg font-semibold text-gray-900\">Nenhuma análise disponível</h3>\n                            <p className=\"text-gray-600\">\n                              Adicione suas fotos e gere sua análise na aba Dashboard\n                            </p>\n                          </div>\n                          <Button onClick={() => setActiveTab('dashboard')}>\n                            Ir para Dashboard\n                          </Button>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  )}\n                </TabsContent>\n              </Tabs>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </div>\n\n      {/* Modais de Assinatura */}\n      {showSubscriptionPlans && (\n        <SubscriptionRequired\n          isOpen={showSubscriptionPlans}\n          onClose={() => setShowSubscriptionPlans(false)}\n          feature={subscriptionFeature}\n          onSelectPlan={handlePlanSelection}\n        />\n      )}\n\n      {showPayment && selectedPlan && (\n        <PaymentScreen\n          isOpen={showPayment}\n          onClose={() => setShowPayment(false)}\n          plan={selectedPlan}\n          onPaymentSuccess={handlePaymentSuccess}\n        />\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6543, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/UserRegister.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { UserPlus, Mail, Phone, CreditCard, ArrowLeft } from 'lucide-react';\n\ninterface UserRegisterProps {\n  onBack: () => void;\n  onRegisterSuccess: () => void;\n}\n\nexport function UserRegister({ onBack, onRegisterSuccess }: UserRegisterProps) {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    cpf: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [showVerification, setShowVerification] = useState(false);\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Nome é obrigatório';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email é obrigatório';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email inválido';\n    }\n\n    if (!formData.phone.trim()) {\n      newErrors.phone = 'Telefone é obrigatório';\n    } else if (!/^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$/.test(formData.phone)) {\n      newErrors.phone = 'Formato: (11) 99999-9999';\n    }\n\n    if (!formData.cpf.trim()) {\n      newErrors.cpf = 'CPF é obrigatório';\n    } else if (!/^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/.test(formData.cpf)) {\n      newErrors.cpf = 'Formato: 000.000.000-00';\n    }\n\n    if (!formData.password) {\n      newErrors.password = 'Senha é obrigatória';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Senha deve ter pelo menos 6 caracteres';\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Senhas não coincidem';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const formatPhone = (value: string) => {\n    const numbers = value.replace(/\\D/g, '');\n    if (numbers.length <= 11) {\n      return numbers.replace(/(\\d{2})(\\d{4,5})(\\d{4})/, '($1) $2-$3');\n    }\n    return value;\n  };\n\n  const formatCPF = (value: string) => {\n    const numbers = value.replace(/\\D/g, '');\n    if (numbers.length <= 11) {\n      return numbers.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n    }\n    return value;\n  };\n\n  const handleInputChange = (field: string, value: string) => {\n    let formattedValue = value;\n    \n    if (field === 'phone') {\n      formattedValue = formatPhone(value);\n    } else if (field === 'cpf') {\n      formattedValue = formatCPF(value);\n    }\n\n    setFormData(prev => ({ ...prev, [field]: formattedValue }));\n    \n    // Limpar erro do campo quando usuário começar a digitar\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      // Simular criação de conta\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // Simular envio de email de verificação\n      setShowVerification(true);\n    } catch (error) {\n      setErrors({ general: 'Erro ao criar conta. Tente novamente.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleVerificationComplete = () => {\n    // Simular verificação de email\n    onRegisterSuccess();\n  };\n\n  if (showVerification) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-blue-950 dark:to-indigo-950 flex items-center justify-center p-4\">\n        <Card className=\"w-full max-w-md shadow-xl border-blue-100 dark:border-blue-800\">\n          <CardHeader className=\"text-center\">\n            <div className=\"mx-auto w-16 h-16 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mb-4\">\n              <Mail className=\"w-8 h-8 text-blue-600\" />\n            </div>\n            <CardTitle className=\"text-blue-900 dark:text-blue-100\">\n              Verifique seu email\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"text-center space-y-4\">\n            <p className=\"text-blue-700 dark:text-blue-300\">\n              Enviamos um link de verificação para:\n            </p>\n            <p className=\"font-semibold text-blue-900 dark:text-blue-100\">\n              {formData.email}\n            </p>\n            <p className=\"text-sm text-blue-600 dark:text-blue-400\">\n              Clique no link do email para ativar sua conta e fazer login.\n            </p>\n            \n            <div className=\"pt-4\">\n              <Button\n                onClick={handleVerificationComplete}\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white\"\n              >\n                Já verifiquei meu email\n              </Button>\n            </div>\n            \n            <Button\n              variant=\"ghost\"\n              onClick={onBack}\n              className=\"w-full text-blue-600 hover:text-blue-700\"\n            >\n              Voltar ao login\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-blue-950 dark:to-indigo-950 flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md\">\n        <Card className=\"shadow-xl border-blue-100 dark:border-blue-800\">\n          <CardHeader className=\"text-center\">\n            <Button\n              variant=\"ghost\"\n              onClick={onBack}\n              className=\"absolute left-4 top-4 p-2\"\n            >\n              <ArrowLeft className=\"w-4 h-4\" />\n            </Button>\n            <CardTitle className=\"flex items-center justify-center gap-2 text-blue-900 dark:text-blue-100\">\n              <UserPlus className=\"w-5 h-5\" />\n              Criar conta\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\" className=\"text-blue-800 dark:text-blue-200\">\n                  Nome completo\n                </Label>\n                <Input\n                  id=\"name\"\n                  type=\"text\"\n                  value={formData.name}\n                  onChange={(e) => handleInputChange('name', e.target.value)}\n                  placeholder=\"Seu nome completo\"\n                  className={`border-blue-200 dark:border-blue-700 focus:ring-blue-500 ${\n                    errors.name ? 'border-red-500' : ''\n                  }`}\n                />\n                {errors.name && (\n                  <p className=\"text-red-500 text-sm\">{errors.name}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\" className=\"text-blue-800 dark:text-blue-200\">\n                  Email\n                </Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={(e) => handleInputChange('email', e.target.value)}\n                  placeholder=\"seu@email.com\"\n                  className={`border-blue-200 dark:border-blue-700 focus:ring-blue-500 ${\n                    errors.email ? 'border-red-500' : ''\n                  }`}\n                />\n                {errors.email && (\n                  <p className=\"text-red-500 text-sm\">{errors.email}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"phone\" className=\"text-blue-800 dark:text-blue-200\">\n                  Telefone\n                </Label>\n                <Input\n                  id=\"phone\"\n                  type=\"tel\"\n                  value={formData.phone}\n                  onChange={(e) => handleInputChange('phone', e.target.value)}\n                  placeholder=\"(11) 99999-9999\"\n                  className={`border-blue-200 dark:border-blue-700 focus:ring-blue-500 ${\n                    errors.phone ? 'border-red-500' : ''\n                  }`}\n                />\n                {errors.phone && (\n                  <p className=\"text-red-500 text-sm\">{errors.phone}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"cpf\" className=\"text-blue-800 dark:text-blue-200\">\n                  CPF\n                </Label>\n                <Input\n                  id=\"cpf\"\n                  type=\"text\"\n                  value={formData.cpf}\n                  onChange={(e) => handleInputChange('cpf', e.target.value)}\n                  placeholder=\"000.000.000-00\"\n                  className={`border-blue-200 dark:border-blue-700 focus:ring-blue-500 ${\n                    errors.cpf ? 'border-red-500' : ''\n                  }`}\n                />\n                {errors.cpf && (\n                  <p className=\"text-red-500 text-sm\">{errors.cpf}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\" className=\"text-blue-800 dark:text-blue-200\">\n                  Senha\n                </Label>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  value={formData.password}\n                  onChange={(e) => handleInputChange('password', e.target.value)}\n                  placeholder=\"••••••••\"\n                  className={`border-blue-200 dark:border-blue-700 focus:ring-blue-500 ${\n                    errors.password ? 'border-red-500' : ''\n                  }`}\n                />\n                {errors.password && (\n                  <p className=\"text-red-500 text-sm\">{errors.password}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"confirmPassword\" className=\"text-blue-800 dark:text-blue-200\">\n                  Confirmar senha\n                </Label>\n                <Input\n                  id=\"confirmPassword\"\n                  type=\"password\"\n                  value={formData.confirmPassword}\n                  onChange={(e) => handleInputChange('confirmPassword', e.target.value)}\n                  placeholder=\"••••••••\"\n                  className={`border-blue-200 dark:border-blue-700 focus:ring-blue-500 ${\n                    errors.confirmPassword ? 'border-red-500' : ''\n                  }`}\n                />\n                {errors.confirmPassword && (\n                  <p className=\"text-red-500 text-sm\">{errors.confirmPassword}</p>\n                )}\n              </div>\n\n              {errors.general && (\n                <div className=\"text-red-600 text-sm text-center bg-red-50 dark:bg-red-950 p-2 rounded\">\n                  {errors.general}\n                </div>\n              )}\n\n              <Button \n                type=\"submit\" \n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white\"\n                disabled={isLoading}\n              >\n                {isLoading ? 'Criando conta...' : 'Criar conta'}\n              </Button>\n            </form>\n\n            <div className=\"mt-4 text-center\">\n              <Button\n                variant=\"ghost\"\n                onClick={onBack}\n                className=\"text-blue-600 hover:text-blue-700\"\n              >\n                Já tem conta? Faça login\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7121, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/SubscriptionPlans.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Check, Crown, Star, Zap, ArrowRight } from 'lucide-react';\nimport { SubscriptionPlan } from '@/lib/types';\n\ninterface SubscriptionPlansProps {\n  onSelectPlan: (planId: 'starter' | 'standard' | 'premium') => void;\n  onClose: () => void;\n}\n\nconst plans: SubscriptionPlan[] = [\n  {\n    id: 'starter',\n    name: 'Starter',\n    price: 19.97,\n    features: {\n      dietsPerMonth: 1,\n      workoutsPerMonth: 1,\n      canChangeDiet: false,\n      supplementConsultation: false\n    },\n    description: [\n      '1 dieta nova por mês',\n      '1 treino por mês',\n      'Análise corporal básica',\n      'Suporte por email'\n    ]\n  },\n  {\n    id: 'standard',\n    name: 'Standard',\n    price: 29.97,\n    features: {\n      dietsPerMonth: 2,\n      workoutsPerMonth: 2,\n      canChangeDiet: true,\n      supplementConsultation: false\n    },\n    description: [\n      'Pode mudar dieta no meio do mês',\n      '2 treinos por mês',\n      'Análise corporal avançada',\n      'Suporte prioritário',\n      'Relatórios de progresso'\n    ]\n  },\n  {\n    id: 'premium',\n    name: 'Premium',\n    price: 49.97,\n    features: {\n      dietsPerMonth: 'unlimited',\n      workoutsPerMonth: 4,\n      canChangeDiet: true,\n      supplementConsultation: true,\n      minimumMonths: 4\n    },\n    description: [\n      'Dietas ilimitadas (quando quiser)',\n      '4 treinos por mês',\n      'Consultoria de suplementação',\n      'Dúvidas sobre manipulados',\n      'Suporte 24/7',\n      'Análise corporal premium',\n      'Acompanhamento personalizado'\n    ]\n  }\n];\n\nexport function SubscriptionPlans({ onSelectPlan, onClose }: SubscriptionPlansProps) {\n  const [selectedPlan, setSelectedPlan] = useState<'starter' | 'standard' | 'premium' | null>(null);\n\n  const getPlanIcon = (planId: string) => {\n    switch (planId) {\n      case 'starter':\n        return <Zap className=\"w-6 h-6\" />;\n      case 'standard':\n        return <Star className=\"w-6 h-6\" />;\n      case 'premium':\n        return <Crown className=\"w-6 h-6\" />;\n      default:\n        return <Zap className=\"w-6 h-6\" />;\n    }\n  };\n\n  const getPlanColor = (planId: string) => {\n    switch (planId) {\n      case 'starter':\n        return 'from-green-500 to-emerald-600';\n      case 'standard':\n        return 'from-blue-500 to-indigo-600';\n      case 'premium':\n        return 'from-purple-500 to-pink-600';\n      default:\n        return 'from-green-500 to-emerald-600';\n    }\n  };\n\n  const handleSelectPlan = (planId: 'starter' | 'standard' | 'premium') => {\n    setSelectedPlan(planId);\n    setTimeout(() => {\n      onSelectPlan(planId);\n    }, 300);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-blue-950 dark:to-indigo-950 p-4\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-blue-900 dark:text-blue-100 mb-4\">\n            Você ainda não assinou um plano!\n          </h1>\n          <p className=\"text-lg text-blue-700 dark:text-blue-300 mb-2\">\n            Para continuar e ter acesso às informações da IA,\n          </p>\n          <p className=\"text-lg text-blue-700 dark:text-blue-300\">\n            escolha o plano que melhor se adequa a você.\n          </p>\n        </div>\n\n        {/* Plans Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n          {plans.map((plan) => (\n            <Card\n              key={plan.id}\n              className={`relative overflow-hidden transition-all duration-300 hover:scale-105 cursor-pointer ${\n                selectedPlan === plan.id\n                  ? 'ring-4 ring-blue-500 shadow-2xl'\n                  : 'shadow-xl hover:shadow-2xl'\n              } ${\n                plan.id === 'premium'\n                  ? 'border-2 border-purple-200 dark:border-purple-800'\n                  : 'border-blue-100 dark:border-blue-800'\n              }`}\n              onClick={() => handleSelectPlan(plan.id)}\n            >\n              {plan.id === 'premium' && (\n                <div className=\"absolute top-0 right-0 bg-gradient-to-r from-purple-500 to-pink-500 text-white px-3 py-1 text-sm font-semibold\">\n                  MAIS POPULAR\n                </div>\n              )}\n              \n              <CardHeader className=\"text-center pb-4\">\n                <div className={`mx-auto w-16 h-16 bg-gradient-to-r ${getPlanColor(plan.id)} rounded-full flex items-center justify-center mb-4 text-white`}>\n                  {getPlanIcon(plan.id)}\n                </div>\n                <CardTitle className=\"text-2xl font-bold text-blue-900 dark:text-blue-100\">\n                  {plan.name}\n                </CardTitle>\n                <div className=\"text-center\">\n                  <span className=\"text-3xl font-bold text-blue-900 dark:text-blue-100\">\n                    R$ {plan.price.toFixed(2).replace('.', ',')}\n                  </span>\n                  <span className=\"text-blue-600 dark:text-blue-400\">/mês</span>\n                </div>\n                {plan.features.minimumMonths && (\n                  <Badge variant=\"outline\" className=\"mx-auto mt-2 border-purple-300 text-purple-700\">\n                    Mínimo {plan.features.minimumMonths} meses\n                  </Badge>\n                )}\n              </CardHeader>\n              \n              <CardContent className=\"pt-0\">\n                <ul className=\"space-y-3\">\n                  {plan.description.map((feature, index) => (\n                    <li key={index} className=\"flex items-start gap-3\">\n                      <Check className=\"w-5 h-5 text-green-500 mt-0.5 flex-shrink-0\" />\n                      <span className=\"text-blue-800 dark:text-blue-200 text-sm\">\n                        {feature}\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n                \n                <Button\n                  className={`w-full mt-6 bg-gradient-to-r ${getPlanColor(plan.id)} hover:opacity-90 text-white transition-all duration-300 ${\n                    selectedPlan === plan.id ? 'scale-105' : ''\n                  }`}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleSelectPlan(plan.id);\n                  }}\n                >\n                  {selectedPlan === plan.id ? (\n                    <>\n                      Selecionado\n                      <ArrowRight className=\"w-4 h-4 ml-2\" />\n                    </>\n                  ) : (\n                    'Escolher plano'\n                  )}\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {/* Important Notes */}\n        <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-6 mb-6\">\n          <h3 className=\"font-semibold text-yellow-800 dark:text-yellow-200 mb-3\">\n            📋 Informações importantes sobre os planos:\n          </h3>\n          <ul className=\"space-y-2 text-sm text-yellow-700 dark:text-yellow-300\">\n            <li>• <strong>Upgrade:</strong> Pode ser feito a qualquer momento</li>\n            <li>• <strong>Downgrade:</strong> Só é possível após 4 meses na categoria atual</li>\n            <li>• <strong>Premium:</strong> Permanência mínima de 4 meses</li>\n            <li>• <strong>Renovação:</strong> Automática mensalmente</li>\n            <li>• <strong>Cancelamento:</strong> Pode ser feito a qualquer momento</li>\n          </ul>\n        </div>\n\n        {/* Back Button */}\n        <div className=\"text-center\">\n          <Button\n            variant=\"ghost\"\n            onClick={onClose}\n            className=\"text-blue-600 hover:text-blue-700\"\n          >\n            Voltar para o app\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7591, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/UserLogin.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useCurrentUser, useUsers } from '@/lib/hooks';\nimport { LogIn, Dumbbell, Heart, Target, UserPlus } from 'lucide-react';\nimport { UserRegister } from './UserRegister';\nimport { SubscriptionPlans } from './SubscriptionPlans';\nimport { PaymentScreen } from './PaymentScreen';\n\ntype AuthScreen = 'login' | 'register' | 'plans' | 'payment';\n\nexport function UserLogin() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [currentScreen, setCurrentScreen] = useState<AuthScreen>('login');\n  const [selectedPlan, setSelectedPlan] = useState<'starter' | 'standard' | 'premium' | null>(null);\n  const { login } = useCurrentUser();\n  const { authenticateUser, users } = useUsers();\n\n  // Debug: mostrar usuários carregados\n  useEffect(() => {\n    console.log('Usuários carregados no UserLogin:', users);\n  }, [users]);\n\n  const handleLogin = (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    console.log('Tentativa de login com:', { email, password });\n    console.log('Usuários disponíveis para autenticação:', users);\n\n    const user = authenticateUser(email, password);\n    console.log('Resultado da autenticação:', user);\n    \n    if (user) {\n      login(user);\n    } else {\n      setError('Email ou senha incorretos');\n    }\n  };\n\n  const handleDemoLogin = (demoEmail: string, demoPassword: string) => {\n    setEmail(demoEmail);\n    setPassword(demoPassword);\n    \n    // Fazer login automaticamente\n    const user = authenticateUser(demoEmail, demoPassword);\n    if (user) {\n      login(user);\n    } else {\n      setError('Erro ao fazer login com credenciais demo');\n    }\n  };\n\n  const handleRegisterSuccess = () => {\n    // Após registro bem-sucedido, mostrar tela de planos\n    setCurrentScreen('plans');\n  };\n\n  const handleSelectPlan = (planId: 'starter' | 'standard' | 'premium') => {\n    setSelectedPlan(planId);\n    setCurrentScreen('payment');\n  };\n\n  const handlePaymentSuccess = () => {\n    // Após pagamento bem-sucedido, fazer login automático\n    // Em um app real, você criaria o usuário no banco de dados\n    // Por enquanto, vamos simular um login bem-sucedido\n    const newUser = {\n      id: 'new-user-' + Date.now(),\n      name: 'Novo Usuário',\n      email: 'novo@usuario.com',\n      password: 'temp123',\n      isAdmin: false,\n      emailVerified: true,\n      createdAt: new Date(),\n      subscription: {\n        plan: selectedPlan!,\n        status: 'active' as const,\n        startDate: new Date(),\n        endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 dias\n        canDowngrade: false,\n        downgradableDate: new Date(Date.now() + 4 * 30 * 24 * 60 * 60 * 1000), // 4 meses\n        dietsUsedThisMonth: 0,\n        workoutsUsedThisMonth: 0\n      }\n    };\n    \n    login(newUser);\n  };\n\n  // Renderizar tela baseada no estado atual\n  if (currentScreen === 'register') {\n    return (\n      <UserRegister\n        onBack={() => setCurrentScreen('login')}\n        onRegisterSuccess={handleRegisterSuccess}\n      />\n    );\n  }\n\n  if (currentScreen === 'plans') {\n    return (\n      <SubscriptionPlans\n        onSelectPlan={handleSelectPlan}\n        onClose={() => setCurrentScreen('login')}\n      />\n    );\n  }\n\n  if (currentScreen === 'payment' && selectedPlan) {\n    return (\n      <PaymentScreen\n        selectedPlan={selectedPlan}\n        onBack={() => setCurrentScreen('plans')}\n        onPaymentSuccess={handlePaymentSuccess}\n      />\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-blue-950 dark:to-indigo-950 flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"flex items-center justify-center gap-2 mb-4\">\n            <div className=\"p-3 bg-blue-600 rounded-full\">\n              <Dumbbell className=\"w-8 h-8 text-white\" />\n            </div>\n            <Heart className=\"w-6 h-6 text-red-500\" />\n          </div>\n          <h1 className=\"text-3xl font-bold text-blue-900 dark:text-blue-100 mb-2\">\n            FitAI Coach\n          </h1>\n          <p className=\"text-blue-700 dark:text-blue-300\">\n            Seu personal trainer com inteligência artificial\n          </p>\n        </div>\n\n        {/* Login Form */}\n        <Card className=\"shadow-xl border-blue-100 dark:border-blue-800\">\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"flex items-center justify-center gap-2 text-blue-900 dark:text-blue-100\">\n              <LogIn className=\"w-5 h-5\" />\n              Entrar na sua conta\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleLogin} className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\" className=\"text-blue-800 dark:text-blue-200\">\n                  Email\n                </Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"seu@email.com\"\n                  required\n                  className=\"border-blue-200 dark:border-blue-700 focus:ring-blue-500\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\" className=\"text-blue-800 dark:text-blue-200\">\n                  Senha\n                </Label>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  placeholder=\"••••••••\"\n                  required\n                  className=\"border-blue-200 dark:border-blue-700 focus:ring-blue-500\"\n                />\n              </div>\n\n              {error && (\n                <div className=\"text-red-600 text-sm text-center bg-red-50 dark:bg-red-950 p-2 rounded\">\n                  {error}\n                </div>\n              )}\n\n              <Button \n                type=\"submit\" \n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white\"\n              >\n                Entrar\n              </Button>\n            </form>\n\n            {/* Register Button */}\n            <div className=\"mt-4\">\n              <Button\n                variant=\"outline\"\n                onClick={() => setCurrentScreen('register')}\n                className=\"w-full border-blue-200 text-blue-600 hover:bg-blue-50 hover:text-blue-700\"\n              >\n                <UserPlus className=\"w-4 h-4 mr-2\" />\n                Não tem conta? Cadastre-se agora mesmo\n              </Button>\n            </div>\n\n            {/* Demo Credentials */}\n            <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900 rounded-lg\">\n              <h4 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-3\">\n                Contas de demonstração:\n              </h4>\n              <div className=\"space-y-2\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"w-full text-left justify-start border-blue-200 hover:bg-blue-100\"\n                  onClick={() => handleDemoLogin('admin@fitai.com', 'admin123')}\n                >\n                  <strong>Admin:</strong>&nbsp;admin@fitai.com / admin123\n                </Button>\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"w-full text-left justify-start border-blue-200 hover:bg-blue-100\"\n                  onClick={() => handleDemoLogin('user@fitai.com', 'user123')}\n                >\n                  <strong>Usuário:</strong>&nbsp;user@fitai.com / user123\n                </Button>\n              </div>\n            </div>\n\n            {/* Debug Info */}\n            {process.env.NODE_ENV === 'development' && (\n              <div className=\"mt-4 p-2 bg-gray-100 dark:bg-gray-800 rounded text-xs\">\n                <p>Debug: {users.length} usuários carregados</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Features */}\n        <div className=\"mt-8 grid grid-cols-1 sm:grid-cols-3 gap-4 text-center\">\n          <div className=\"p-4 bg-white dark:bg-blue-900 rounded-lg shadow\">\n            <Target className=\"w-6 h-6 text-blue-600 mx-auto mb-2\" />\n            <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n              Dietas Personalizadas\n            </p>\n          </div>\n          <div className=\"p-4 bg-white dark:bg-blue-900 rounded-lg shadow\">\n            <Dumbbell className=\"w-6 h-6 text-blue-600 mx-auto mb-2\" />\n            <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n              Treinos Inteligentes\n            </p>\n          </div>\n          <div className=\"p-4 bg-white dark:bg-blue-900 rounded-lg shadow\">\n            <Heart className=\"w-6 h-6 text-blue-600 mx-auto mb-2\" />\n            <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n              Análise Corporal\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8126, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/components/AppInitializer.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from 'react';\nimport { useUsers } from '@/lib/hooks';\n\ninterface AppInitializerProps {\n  children: React.ReactNode;\n}\n\nexport function AppInitializer({ children }: AppInitializerProps) {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const { users } = useUsers();\n\n  useEffect(() => {\n    // Aguardar um pouco para garantir que o localStorage foi carregado\n    const timer = setTimeout(() => {\n      setIsInitialized(true);\n    }, 100);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  if (!isInitialized) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-blue-950 dark:to-indigo-950 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-blue-700 dark:text-blue-300\">Carregando FitAI Coach...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AASO,SAAS,eAAe,EAAE,QAAQ,EAAuB;IAC9D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,WAAQ,AAAD;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,mEAAmE;QACnE,MAAM,QAAQ,WAAW;YACvB,iBAAiB;QACnB,GAAG;QAEH,OAAO,IAAM,aAAa;IAC5B,GAAG,EAAE;IAEL,IAAI,CAAC,eAAe;QAClB,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAE,WAAU;kCAAmC;;;;;;;;;;;;;;;;;IAIxD;IAEA,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 8187, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { useCurrentUser, useUsers } from '@/lib/hooks';\nimport { AdminPanel } from '@/components/AdminPanel';\nimport { UserDashboard } from '@/components/UserDashboard';\nimport { UserLogin } from '@/components/UserLogin';\nimport { AppInitializer } from '@/components/AppInitializer';\nimport { Dumbbell, Heart, Target, Users } from 'lucide-react';\n\nexport default function Home() {\n  const { currentUser, isLoggedIn, isAdmin } = useCurrentUser();\n\n  return (\n    <AppInitializer>\n      {!isLoggedIn ? (\n        <UserLogin />\n      ) : isAdmin ? (\n        <AdminPanel />\n      ) : (\n        <UserDashboard />\n      )}\n    </AppInitializer>\n  );\n}"],"names":[],"mappings":";;;;AAUA;AACA;AACA;AACA;AACA;AAdA;;;;;;;AAiBe,SAAS;IACtB,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,iBAAc,AAAD;IAE1D,qBACE,8OAAC,oIAAA,CAAA,iBAAc;kBACZ,CAAC,2BACA,8OAAC,+HAAA,CAAA,YAAS;;;;mBACR,wBACF,8OAAC,gIAAA,CAAA,aAAU;;;;iCAEX,8OAAC,mIAAA,CAAA,gBAAa;;;;;;;;;;AAItB","debugId":null}}]
}